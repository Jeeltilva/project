{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/addcase/addcase.component.ts","./src/app/addcase/addcase.component.html","./src/app/disposed/disposed.component.ts","./src/app/disposed/disposed.component.html","./src/app/cases/cases.component.ts","./src/app/cases/cases.component.html","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/environments/environment.ts","./src/app/pre-admitted/preadmitted.component.ts","./src/app/pre-admitted/preadmitted.component.html","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/loginclient/loginclient.component.ts","./src/app/loginclient/loginclient.component.html","./src/app/services/websocket.service.ts","./src/app/admitted/admitted.component.ts","./src/app/admitted/admitted.component.html","./src/app/error/error.service.ts","./src/app/client-dashboard/client-dashboard.component.ts","./src/app/client-dashboard/client-dashboard.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/models/addcase.model.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/demo-utils/module.ts","./src/app/error-interceptor.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/auth-interceptor.ts","./src/app/try/module.ts","./src/app/demo-utils/calendar-header.component.ts","./src/app/app.module.ts","./src/app/editcase/editcase.component.ts","./src/app/editcase/editcase.component.html","./src/app/models/lawyer.model.ts","./src/app/services/case.service.ts","./src/app/client-chatroom/client-chatroom.component.html","./src/app/client-chatroom/client-chatroom.component.ts","./src/app/registerclient/registerclient.component.ts","./src/app/registerclient/registerclient.component.html","./src/app/_helpers/must-match.validator.ts","./src/app/services/auth.service.ts","./src/app/client-cases/client-cases.component.ts","./src/app/client-cases/client-cases.component.html","./src/app/auth.guard.ts","./src/app/try/try.component.ts","./src/app/try/try.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/caseinfo/caseinfo.component.ts","./src/app/caseinfo/caseinfo.component.html","./src/app/chatroom/chatroom.component.html","./src/app/chatroom/chatroom.component.ts","./src/app/client-main-nav/client-main-nav.component.ts","./src/app/client-main-nav/client-main-nav.component.html","./src/app/client-caseinfo/client-caseinfo.component.ts","./src/app/client-caseinfo/client-caseinfo.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { Lawyer } from \"../models/lawyer.model\";\nimport { AuthService } from '../services/auth.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  \n  constructor(private formBuilder: FormBuilder, private router: Router, private _snackBar: MatSnackBar, private authSer: AuthService) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phnno: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      gender: ['', [Validators.required]],\n      year: ['', [Validators.required, Validators.pattern(/^\\d{4}$/)]],\n      address: ['', Validators.required],\n      uni: ['', Validators.required],\n      city: ['', Validators.required],\n      prac: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmpassword: ['', Validators.required],\n      bcn: ['',Validators.required],\n      nationality: ['', Validators.required]\n    },\n    \t{\n            validator: MustMatch('password', 'confirmpassword')\n        });\n  }\n  get data() { return this.registerForm.controls; }\n\n  // getErrorMessage() {\n  //   if (this.email.hasError('required')) {\n  //     return 'You must enter a value';\n  //   }\n\n  //   return this.email.hasError('email') ? 'Not a valid email' : '';\n  // }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // // stop here if form is invalid\n    // if (this.registerForm.invalid) {\n    //     return;\n    // }\n    const value = this.registerForm.value;\n    const form = new Lawyer(value.firstname,\n      value.lastname,\n      value.birthdate,\n      value.email,\n      value.phnno,\n      value.year,\n      value.address,\n      value.uni,\n      value.city,\n      value.gender,\n      value.prac,\n      value.password,\n      value.bcn,\n      value.nationality);\n      this.authSer.createLawyer(form, \"lawyer\");\n}\n\nonReset() {\n    this.submitted = false;\n    this.registerForm.reset();\n}\n}","<div class=\"grid-container\">\t   \n\t   <mat-card>\n          <h3 style=\"text-align: center;\">Register as a Lawyer</h3>\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\">\n            <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"First Name\" formControlName=\"firstname\">\n\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"data.firstname.errors?.required\">First Name is required</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"Last Name\" formControlName=\"lastname\">\n\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"data.lastname.errors?.required\">Last Name is required</mat-error>\n\t\t\t  </mat-form-field>\n\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<mat-label>Birthdate</mat-label>\n\t\t\t\t<input matInput [matDatepicker]=\"picker2\" formControlName=\"birthdate\">\n\t\t\t\t<mat-icon matSuffix><mat-datepicker-toggle [for]=\"picker2\"></mat-datepicker-toggle></mat-icon>\n\t\t\t\t<mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\n\t\t\t\t<mat-error *ngIf=\"data.birthdate.errors?.required\">Birthdate is required</mat-error>\n\t\t\t  </mat-form-field>\n\n\t\t\t  <mat-radio-group class=\"w-100\" aria-label=\"Select\" matInput required placeholder=\"Gender\" formControlName=\"gender\">Gender:\n\t\t\t\t<mat-radio-button style=\"margin-left: 5px;\" value=\"Male\">Male</mat-radio-button>\n\t\t\t\t<mat-radio-button style=\"margin-left: 5px;\"value=\"Female\">female</mat-radio-button>\n\t\t\t\t<mat-radio-button style=\"margin-left: 5px;\"value=\"Other\">Other</mat-radio-button>\n\t\t\t  </mat-radio-group>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<mat-label>Enter your email</mat-label>\n\t\t\t\t<input matInput placeholder=\"abc@example.com\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && data.email.errors }\">\n\t\t\t\t<mat-icon matSuffix>email</mat-icon>\n\t\t\t\t<!-- <mat-error *ngIf=\"data.email.errors?.required\">Email is Required</mat-error> -->\n\t\t\t\t<mat-error *ngIf=\"submitted && data.email.errors\" class=\"invalid-feedback\">\n\t\t\t\t  <mat-error *ngIf=\"data.email.errors?.required\">Email is required</mat-error>\n\t\t\t\t  <mat-error *ngIf=\"data.email.errors?.email\">Email must be a valid email address</mat-error>\n\t\t\t\t</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"Contact number\" formControlName=\"phnno\" [ngClass]=\"{ 'is-invalid': submitted}\">\n\t\t\t\t<mat-icon matSuffix>phone</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"submitted && data.phnno.errors\" class=\"invalid-feedback\">\n\t\t\t\t  <mat-error *ngIf=\"data.phnno.errors?.required\">Contact number is required</mat-error>\n\t\t\t\t  <mat-error *ngIf=\"data.phnno.errors?.pattern\">Contact number must be lenght of 10</mat-error>\n\t\t\t\t</mat-error>\n\t\t\t  </mat-form-field>\n            <mat-form-field class=\"w-100\">\n\t\t\t    <mat-label>Nationality</mat-label>\n\t\t\t    <mat-select formControlName=\"nationality\">\n\t\t\t      <!-- <mat-option value=\"mat-option\">mat-option</mat-option> -->\n\t\t\t     <!--  <mat-option value=\"\" disabled selected> <h6>Nationality<h6></mat-option> -->\n\t\t\t\t\t\t<mat-option value=\"Afghan\"> Afghan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Albanian\"> Albanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Algerian\"> Algerian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"American\"> American </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Andorran\"> Andorran </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Angolan\"> Angolan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Antiguans\"> Antiguans </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Argentinean\"> Argentinean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Armenian\"> Armenian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Australian\"> Australian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Austrian\"> Austrian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Azerbaijani\"> Azerbaijani </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bahamian\"> Bahamian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bahraini\"> Bahraini </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bangladeshi\"> Bangladeshi </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Barbadian\"> Barbadian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Barbudans\"> Barbudans </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Batswana\"> Batswana </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Belarusian\"> Belarusian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Belgian\"> Belgian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Belizean\"> Belizean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Beninese\"> Beninese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bhutanese\"> Bhutanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bolivian\"> Bolivian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bosnian\"> Bosnian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Brazilian\"> Brazilian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"British\"> British </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bruneian\"> Bruneian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Bulgarian\"> Bulgarian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Burkinabe\"> Burkinabe </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Burmese\"> Burmese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Burundian\"> Burundian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Cambodian\"> Cambodian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Cameroonian\"> Cameroonian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Canadian\"> Canadian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Cape Verdean\"> Cape Verdean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Central African\"> Central African </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Chadian\"> Chadian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Chilean\"> Chilean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Chinese\"> Chinese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Colombian\"> Colombian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Comoran\"> Comoran </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Congolese\"> Congolese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Congolese\"> Congolese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Costa Rican\"> Costa Rican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Croatian\"> Croatian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Cuban\"> Cuban </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Cypriot\"> Cypriot </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Czech\"> Czech </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Danish\"> Danish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Djibouti\"> Djibouti </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Dominican\"> Dominican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Dominican\"> Dominican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Dutch\"> Dutch </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Dutchman\"> Dutchman </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Dutchwoman\"> Dutchwoman </mat-option>\n\t\t\t\t\t\t<mat-option value=\"East Timorese\"> East Timorese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ecuadorean\"> Ecuadorean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Egyptian\"> Egyptian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Emirian\"> Emirian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Equatorial Guinean\"> Equatorial Guinean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Eritrean\"> Eritrean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Estonian\"> Estonian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ethiopian\"> Ethiopian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Fijian\"> Fijian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Filipino\"> Filipino </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Finnish\"> Finnish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"French\"> French </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Gabonese\"> Gabonese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Gambian\"> Gambian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Georgian\"> Georgian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"German\"> German </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ghanaian\"> Ghanaian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Greek\"> Greek </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Grenadian\"> Grenadian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Guatemalan\"> Guatemalan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Guinea-Bissauan\"> Guinea-Bissauan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Guinean\"> Guinean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Guyanese\"> Guyanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Haitian\"> Haitian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Herzegovinian\"> Herzegovinian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Honduran\"> Honduran </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Hungarian\"> Hungarian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"I-Kiribati\"> I-Kiribati </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Icelander\"> Icelander </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Indian\"> Indian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Indonesian\"> Indonesian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Iranian\"> Iranian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Iraqi\"> Iraqi </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Irish\"> Irish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Irish\"> Irish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Israeli\"> Israeli </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Italian\"> Italian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ivorian\"> Ivorian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Jamaican\"> Jamaican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Japanese\"> Japanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Jordanian\"> Jordanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Kazakhstani\"> Kazakhstani </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Kenyan\"> Kenyan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Kittian and Nevisian\"> Kittian and Nevisian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Kuwaiti\"> Kuwaiti </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Kyrgyz\"> Kyrgyz </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Laotian\"> Laotian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Latvian\"> Latvian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Lebanese\"> Lebanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Liberian\"> Liberian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Libyan\"> Libyan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Liechtensteiner\"> Liechtensteiner </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Lithuanian\"> Lithuanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Luxembourger\"> Luxembourger </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Macedonian\"> Macedonian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Malagasy\"> Malagasy </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Malawian\"> Malawian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Malaysian\"> Malaysian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Maldivan\"> Maldivan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Malian\"> Malian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Maltese\"> Maltese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Marshallese\"> Marshallese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mauritanian\"> Mauritanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mauritian\"> Mauritian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mexican\"> Mexican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Micronesian\"> Micronesian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Moldovan\"> Moldovan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Monacan\"> Monacan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mongolian\"> Mongolian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Moroccan\"> Moroccan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mosotho\"> Mosotho </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Motswana\"> Motswana </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Mozambican\"> Mozambican </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Namibian\"> Namibian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Nauruan\"> Nauruan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Nepalese\"> Nepalese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Netherlander\"> Netherlander </mat-option>\n\t\t\t\t\t\t<mat-option value=\"New Zealander\"> New Zealander </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ni-Vanuatu\"> Ni-Vanuatu </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Nicaraguan\"> Nicaraguan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Nigerian\"> Nigerian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Nigerien\"> Nigerien </mat-option>\n\t\t\t\t\t\t<mat-option value=\"North Korean\"> North Korean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Northern Irish\"> Northern Irish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Norwegian\"> Norwegian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Omani\"> Omani </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Pakistani\"> Pakistani </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Palauan\"> Palauan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Panamanian\"> Panamanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Papua New Guinean\"> Papua New Guinean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Paraguayan\"> Paraguayan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Peruvian\"> Peruvian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Polish\"> Polish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Portuguese\"> Portuguese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Qatari\"> Qatari </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Romanian\"> Romanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Russian\"> Russian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Rwandan\"> Rwandan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Saint Lucian\"> Saint Lucian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Salvadoran\"> Salvadoran </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Samoan\"> Samoan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"San Marinese\"> San Marinese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Sao Tomean\"> Sao Tomean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Saudi\"> Saudi </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Scottish\"> Scottish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Senegalese\"> Senegalese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Serbian\"> Serbian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Seychellois\"> Seychellois </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Sierra Leonean\"> Sierra Leonean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Singaporean\"> Singaporean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Slovakian\"> Slovakian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Slovenian\"> Slovenian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Solomon Islander\"> Solomon Islander </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Somali\"> Somali </mat-option>\n\t\t\t\t\t\t<mat-option value=\"South African\"> South African </mat-option>\n\t\t\t\t\t\t<mat-option value=\"South Korean\"> South Korean </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Spanish\"> Spanish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Sri Lankan\"> Sri Lankan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Sudanese\"> Sudanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Surinamer\"> Surinamer </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Swazi\"> Swazi </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Swedish\"> Swedish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Swiss\"> Swiss </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Syrian\"> Syrian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Taiwanese\"> Taiwanese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Tajik\"> Tajik </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Tanzanian\"> Tanzanian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Thai\"> Thai </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Togolese\"> Togolese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Tongan\"> Tongan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Trinidadian or Tobagonian\"> Trinidadian or Tobagonian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Tunisian\"> Tunisian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Turkish\"> Turkish </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Tuvaluan\"> Tuvaluan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ugandan\"> Ugandan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Ukrainian\"> Ukrainian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Uruguayan\"> Uruguayan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Uzbekistani\"> Uzbekistani </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Venezuelan\"> Venezuelan </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Vietnamese\"> Vietnamese </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Welsh\"> Welsh </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Welsh\"> Welsh </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Yemenite\"> Yemenite </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Zambian\"> Zambian </mat-option>\n\t\t\t\t\t\t<mat-option value=\"Zimbabwean\"> Zimbabwean </mat-option>\n\t\t\t    </mat-select>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"City\" formControlName=\"city\">\n\t\t\t\t<mat-icon matSuffix>location_city</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"data.city.errors?.required\">City is required</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<textarea type=\"text\" matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\n\t\t\t\t<mat-error *ngIf=\"data.address.errors?.required\">Address is required</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"Bar council number\" formControlName=\"bcn\">\n\t\t\t\t<mat-error *ngIf=\"data.bcn.errors?.required\">Bar council number is required</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"University\" formControlName=\"uni\">\n\t\t\t\t<mat-icon matSuffix>school</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"data.uni.errors?.required\">University Name is required</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"number\" matInput placeholder=\"year since you are practicing\" formControlName=\"year\">\n\t\t\t\t<mat-icon matSuffix>date_range</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"submitted && data.year.errors\">\n\t\t\t\t  <mat-error *ngIf=\"data.year.errors.required\">Year is required</mat-error>\n\t\t\t\t  <mat-error *ngIf=\"data.year.errors.pattern\">year must be a valid in the format YYYY</mat-error>\n\t\t\t\t</mat-error>\n\t\t\t  </mat-form-field>\n\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t<input type=\"text\" matInput placeholder=\"Area of Practice\" formControlName=\"prac\">\n\t\t\t\t<mat-icon matSuffix>work</mat-icon>\n\t\t\t\t<mat-error *ngIf=\"data.prac.errors?.required\">Area of Practice is required</mat-error>\n\t\t\t\t</mat-form-field>\n      \t\t\t<!-- <mat-checkbox value=\"\">Armed forced Tribunal</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Banking/Finance</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Bankruptcy/Insolvency</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Breach of Contract</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Cheque Bounce</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">child Custody</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Civil</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Consumer Court</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Corporate</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Criminal</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Cyber Crime</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Divorce</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Documentation</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Family</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">GST</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Insurance</mat-checkbox>\n      \t\t\t<mat-checkbox value=\"\">Media and Entertainment</mat-checkbox> -->\n\t\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t\t<input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && data.password.errors }\">\n\t\t\t\t\t<mat-icon matSuffix>lock</mat-icon>\n\t\t\t\t\t<mat-error *ngIf=\"submitted && data.password.errors\">\n\t\t\t\t\t\t<mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\n\t\t\t\t\t\t<mat-error *ngIf=\"data.password.errors.minlength\">Password must be at least 8 characters</mat-error>\n\t\t\t\t\t</mat-error>\n\t\t\t\t  </mat-form-field>\n\t\t\t\t  <mat-form-field class=\"w-100\">\n\t\t\t\t\t<input type=\"password\" matInput placeholder=\"Confirm Password\" formControlName=\"confirmpassword\" [ngClass]=\"{ 'is-invalid': submitted && data.confirmpassword.errors }\">\n\t\t\t\t\t<mat-error *ngIf=\"submitted && data.confirmpassword.errors\">\n\t\t\t\t\t\t\t  <mat-error *ngIf=\"data.confirmpassword.errors.required\">Confirm Password is required</mat-error>\n\t\t\t\t\t\t\t  <mat-error *ngIf=\"data.confirmpassword.errors.mustMatch\">Passwords must match</mat-error>\n\t\t\t\t\t </mat-error>\n\t\t\t\t\t<mat-icon matSuffix>lock</mat-icon>\n\t\t\t\t  </mat-form-field>\n            <div class=\"w-100\" style=\"display:flex;\">\n\t\t\t  <button mat-raised-button color=\"primary\" [disabled]=\"registerForm.invalid\">Register</button>\n\t\t\t  <button style=\"margin-left: 10px;\" mat-stroked-button color=\"warn\" type=\"reset\" (click)=\"onReset()\">cancel</button>\n\t\t\t  <span class=\"flex-spacer\"></span>\n\t\t\t  <a [routerLink]=\"['/login']\" style=\"margin-top: 5px;\">Already registered? Login here</a>\n            </div>\n          </form>\n\t\t</mat-card>\n</div>","import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Addcase } from \"../models/addcase.model\";\nimport { CaseService } from \"../services/case.service\";\n\n@Component({\n  selector: 'app-addcase',\n  templateUrl: './addcase.component.html',\n  styleUrls: ['./addcase.component.scss']\n})\nexport class AddcaseComponent implements OnInit {\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  @ViewChild('addcase') form:NgForm;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  onSubmit(form: NgForm) {\n    const value = this.form.value;\n    console.log(value);\n    const Case = new Addcase(value.stampNo, value.fillingDate, value.status, value.bench, value.petitioner, value.respondent,value.forum, value.district,value.postalCode, value.act, value.RegNo, value.RegDate, value.stage, value.description);\n    this.caseService.addCase(Case);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  // onReset(form: NgForm) {\n  //   form.onReset()\n  // }\n}\n","<div class=\"grid-container\">\n    <h1 class=\"mat-h1\">Add New Case</h1>\n  <form (ngSubmit)=\"onSubmit(addcase)\" #addcase=\"ngForm\">\n    <mat-card>\n      <mat-card-content style=\"margin : 0px 30px\">\n        <div fxLayout=\"column\">\n      <mat-form-field class=\"half-width\">\n        <mat-label for='stampNo'>Stamp Number</mat-label>\n          <input matInput id='stampNo' name='stampNo' ngModel required>\n        </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <input matInput required [matDatepicker]=\"picker\" placeholder=\"Filling Date\" name=\"fillingDate\" id=\"fillingDate\" ngModel>\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Status</mat-label>\n        <mat-select ngModel name=\"status\" id=\"status\" required>\n          <mat-option value=\"pre-admitted\">pre-admitted</mat-option>\n          <mat-option value=\"admitted\">admitted</mat-option>\n          <mat-option value=\"disposed\">disposed</mat-option>\n          <mat-option value=\"rejected\">rejected</mat-option>\n          <mat-option value=\"reference-case\">reference-case</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div fxLayout=\"row\">\n      <mat-form-field class=\"half-width\">\n        <mat-select placeholder=\"Forum\" name=\"forum\" id=\"forum\" ngModel required>\n        <mat-option value=\"High Court\">High Court</mat-option>\n          <mat-option value=\"Supreme Court\">Supreme Court</mat-option>\n          <mat-option value=\"XYZ\" disabled>XYZ</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\" style=\"margin-left:10px\">\n        <mat-label>Bench</mat-label>\n        <input matInput placeholder=\"Morbi\" name=\"bench\" id=\"bench\" ngModel required>\n      </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\">\n    <mat-form-field class=\"half-width\">\n      <mat-label>Petitioner</mat-label>\n      <input matInput name=\"petitioner\" id=\"petitioner\" ngModel required>\n    </mat-form-field>\n\n    <mat-form-field class=\"half-width\" style=\"margin-left: 10px;\">\n      <mat-label>Respondent</mat-label>\n      <input matInput name=\"respondent\" id=\"respondent\" ngModel required>\n    </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>District</mat-label>\n        <input matInput placeholder=\"Ex. Morbi\" name=\"district\" id=\"district\" ngModel required>\n      </mat-form-field>\n\n     <mat-form-field class=\"full-width\" style=\"margin-left: 10px;\">\n           <mat-label>Postal Code</mat-label>\n           <input matInput #postalCode maxlength=\"6\" placeholder=\"Ex. 363642\" name=\"postalCode\" id=\"postalCode\" ngModel required>\n           <mat-hint>{{postalCode.value.length}} / 6</mat-hint>\n         </mat-form-field>\n      </div>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Act</mat-label>\n        <input matInput name=\"act\" id=\"act\" ngModel>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Reg Number</mat-label>\n        <input matInput name=\"RegNo\" id=\"RegNo\" ngModel>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Stage</mat-label>\n        <input matInput name=\"stage\" id=\"stage\" ngModel>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <input matInput #message maxlength=\"256\" placeholder=\"Description\" name=\"description\" id=\"description\" ngModel>\n        <mat-hint [align]=\"'end'\">{{message.value.length}} / 256</mat-hint>\n      </mat-form-field>\n  \n      <mat-form-field class=\"half-width\">\n        <input matInput [matDatepicker]=\"picker1\" placeholder=\"Reg. Date\" name=\"RegDate\" id=\"RegDate\" ngModel>\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n      </mat-form-field>\n\n      <!-- <mat-file-upload>\n        [labelText]=\"Document\"\n        [selectButtonText]=\"'Choose File'\"\n        [selectFilesButtonType]=\"button\"\n        [uploadButtonText]=\"'Submit'\"\n        [uploadButtonType]=\"submit\"\n        [allowMultipleFiles]=\"false\"\n        [showUploadButton]=\"true\"\n        [customSvgIcon]=\"'close_custom'\"\n        [acceptedTypes]=\"'.pdf, .docx'\"\n        (uploadClicked)=\"onUploadClicked($event)\"\n        (selectedFilesChanged)=\"onSelectedFilesChanged($event)\"\n      </mat-file-upload> -->\n\n  </div>\n  <mat-card-actions>\n    <br><br>\n    <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button> \n    <button mat-raised-button color=\"basic\" type=\"reset\">Clear</button>\n   </mat-card-actions>\n       </mat-card-content>\n    </mat-card>\n  </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription} from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { CaseService } from '../services/case.service';\nimport { Case } from '../models/case.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-disposed',\n  templateUrl: './disposed.component.html',\n  styleUrls: ['./disposed.component.scss']\n})\nexport class DisposedComponent implements OnInit, OnDestroy {\n  private caseSub: Subscription;\n  cases: Case[];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit() {\n    this.caseSub = this.caseService.getCasesUpdateListener().subscribe((data: Case[]) => {\n      this.cases = data;});\n      this.caseService.getdisposedCases();\n  }\n  panelOpenState = false;\n\n  onView(id) {\n    this.caseService.getCaseData(id);\n    this.caseService.getLinkedClient(id);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  onDelete(id) {\n    this.caseService.deleteCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n  }\n}\n\n","<div class=\"grid-container\">\n        <div style=\"display: flex;\">\n            <h1 class=\"mat-h1\">Disposed/Rejected Cases</h1>\n            <span class=\"flex-spacer\"></span>\n            <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n        </div>\n        <mat-accordion multi>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                 (closed)=\"panelOpenState = false\"\n                                 *ngFor=\"let case of cases,let i = index\" class=\"panel\"\n                                 hideToggle>\n              <mat-expansion-panel-header [collapsedHeight]=\"(isHandset$ | async) ? '129px' : ''\"\n              [expandedHeight]=\"(isHandset$ | async) ? '129px' : ''\" style=\"padding-top: 9px;\">\n                <mat-panel-title>\n                 {{i + 1}} ) {{case.stampNo}}\n                </mat-panel-title>\n                <mat-panel-description *ngIf=\"(isHandset$ | async)\" fxLayout=\"column\" >\n                  <p>{{ case.petitioner | slice:0:25 }}</p>\n                  <p style=\"color:red\" >V/s</p>\n                  <p>{{ case.respondent | slice:0:25 }}</p> \n                  <p style=\"color:black\">{{case.status}}</p>\n                </mat-panel-description>\n                <mat-panel-description *ngIf=\"(isHandset$ | async) === false\">\n                    <p>{{ case.petitioner | slice:0:50 }}</p>\n                    <p style=\"color:red;margin-left: 10px;\" >V/s</p>\n                    <p style=\"margin-left: 10px;\">{{ case.respondent | slice:0:50 }}</p>\n                    <span class=\"flex-spacer\"></span>\n                    <p style=\"margin-right: 70px;color :black\">{{case.status}}</p> \n                  </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div style=\"display: flex;\">\n                <button mat-raised-button color=\"primary\" (click)=\"onView(case._id)\">View</button>\n                <span class=\"flex-spacer\"></span>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDelete(case._id)\" >Permanent delete</button>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"cases.length != 0\">\n          <mat-paginator [length]=\"cases.length\"\n          [pageSize]=\"10\"\n          [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription} from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { CaseService } from '../services/case.service';\nimport { Case } from '../models/case.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cases',\n  templateUrl: './cases.component.html',\n  styleUrls: ['./cases.component.scss']\n})\nexport class CasesComponent implements OnInit, OnDestroy {\n  private caseSub: Subscription;\n  cases: Case[];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit() {\n    this.caseSub = this.caseService.getCasesUpdateListener().subscribe((data: Case[]) => {\n      this.cases = data;});\n      this.caseService.getCases();\n  }\n  panelOpenState = false;\n\n  onView(id) {\n    this.caseService.getCaseData(id);\n    this.caseService.getLinkedClient(id);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  onDispose(data:Case) {\n    this.caseService.disposeCase(data._id);\n    this.cases = this.cases.filter(function(e:Case) {\n      if(e._id !== data._id){\n        return e;}\n      else{\n        return e.status = \"disposed\"\n    }});\n    // data.status = \"disposed\"\n    // this.cases = [...this.cases, data]\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n\n  onDelete(id) {\n    this.caseService.deleteCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n  }\n}\n\n","<div class=\"grid-container\">\n        <div style=\"display: flex;\">\n            <h1 class=\"mat-h1\">Cases</h1>\n            <span class=\"flex-spacer\"></span>\n            <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n        </div>\n        <mat-accordion multi>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                 (closed)=\"panelOpenState = false\"\n                                 *ngFor=\"let case of cases,let i = index\" class=\"panel\"\n                                 hideToggle>\n              <mat-expansion-panel-header [collapsedHeight]=\"(isHandset$ | async) ? '129px' : ''\"\n              [expandedHeight]=\"(isHandset$ | async) ? '129px' : ''\" style=\"padding-top: 9px;\">\n                <mat-panel-title>\n                 {{i + 1}} ) {{case.stampNo}}\n                </mat-panel-title>\n                <mat-panel-description *ngIf=\"(isHandset$ | async)\" fxLayout=\"column\" >\n                  <p>{{ case.petitioner | slice:0:25 }}</p>\n                  <p style=\"color:red\" >V/s</p>\n                  <p>{{ case.respondent | slice:0:25 }}</p> \n                  <p style=\"color:black\">{{case.status}}</p>\n                </mat-panel-description>\n                <mat-panel-description *ngIf=\"(isHandset$ | async) === false\">\n                    <p>{{ case.petitioner | slice:0:50 }}</p>\n                    <p style=\"color:red;margin-left: 10px;\" >V/s</p>\n                    <p style=\"margin-left: 10px;\">{{ case.respondent | slice:0:50 }}</p>\n                    <span class=\"flex-spacer\"></span>\n                    <p style=\"margin-right: 70px;color :black\">{{case.status}}</p> \n                  </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div style=\"display: flex;\">\n                <button mat-raised-button color=\"primary\" (click)=\"onView(case._id)\">View</button>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" *ngIf=\"!(case.status === 'disposed' || case.status==='rejected')\" (click)=\"onDispose(case)\">Dispose</button>\n                <span class=\"flex-spacer\"></span>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDelete(case._id)\" >Permanent delete</button>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"cases.length != 0\">\n          <mat-paginator [length]=\"cases.length\"\n          [pageSize]=\"10\"\n          [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n</div>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss']\n})\nexport class MainNavComponent {\n\n  link1:boolean = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService : AuthService) {}\n\n  selectList() {\n    this.link1=!this.link1;\n  }\n\n  logoutLawyer () {\n    this.authService.logoutLawyer()\n  }\n}\n","<!-- <mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar style=\"background-color:#9E9E9E;color: white;\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Lawyer Portal</span>\n      <span class=\"flex-spacer\"></span>\n      <button mat-icon-button >\n        <mat-icon>chat</mat-icon>\n      </button>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>settings</mat-icon>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>Item 1</button>\n            <button mat-menu-item>Item 2</button>\n          </mat-menu>\n      </button>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n\n<ng-container>\n    <mat-toolbar color='primary' class=\"example-header\">\n      <button\n          type=\"button\"\n          aria-label=\"Toggle sidenav\"\n          mat-icon-button\n          (click)=\"sidenav.toggle()\"\n        >\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        </button>\n        <span>Lawyer Portal</span>\n        <span class=\"flex-spacer\"></span>\n        <button mat-icon-button >\n          <mat-icon>chat</mat-icon>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>settings</mat-icon>\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item>Item 1</button>\n              <button (click)=\"logoutLawyer()\" mat-menu-item>Logout</button>\n            </mat-menu>\n        </button>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\">\n      <mat-sidenav #sidenav [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" opened class=\"example-sidenav\"\n                   [fixedInViewport]=\"'fixed'\"\n                   [fixedTopGap]=\"60\" [fixedBottomGap]=\"60\"\n                   [opened]=\"(isHandset$ | async) === false\">\n                   <mat-nav-list>\n                    <a mat-list-item routerLink='/dashboard'>Dashboard</a><mat-divider></mat-divider>\n                    <a mat-list-item (click)='selectList()'>Cases\n                      <span class=\"flex-spacer\"></span>\n                      <mat-icon *ngIf=\"link1===false\">arrow_drop_down</mat-icon>\n                      <mat-icon *ngIf=\"link1===true\">arrow_drop_up</mat-icon>\n                    </a>\n                    <a mat-list-item *ngIf=\"link1===true\" routerLink='addcase'>Add new Case</a>\n                    <a mat-list-item *ngIf=\"link1===true\" routerLink='/cases'>All Cases</a>\n                    <a mat-list-item *ngIf=\"link1===true\" routerLink='preadmittedcases'>Pre-Admitted</a>\n                    <a mat-list-item *ngIf=\"link1===true\" routerLink='/admittedcases'>Admitted</a>\n                    <a mat-list-item *ngIf=\"link1===true\" routerLink='disposedcases'>Disposed/Rejected</a>\n                    <mat-divider></mat-divider>\n                    <a mat-list-item routerLink='/cases'>Lawbook</a><mat-divider></mat-divider>\n                    <a mat-list-item routerLink='/cases'>Reference Cases</a><mat-divider></mat-divider>\n                    <a mat-list-item routerLink='/try'>Calender</a><mat-divider></mat-divider>\n                    <a mat-list-item routerLink='/chatroom'>Clients</a>\n                  </mat-nav-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <ng-content></ng-content>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  \n    <mat-toolbar class=\"example-footer\">Footer</mat-toolbar>\n  </ng-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription} from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { CaseService } from '../services/case.service';\nimport { Case } from '../models/case.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-preadmitted',\n  templateUrl: './preadmitted.component.html',\n  styleUrls: ['./preadmitted.component.scss']\n})\nexport class PreadmittedComponent implements OnInit, OnDestroy {\n  private caseSub: Subscription;\n  cases: Case[];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit() {\n    this.caseSub = this.caseService.getCasesUpdateListener().subscribe((data: Case[]) => {\n      this.cases = data;});\n      this.caseService.getpreadmittedCases();\n  }\n  panelOpenState = false;\n\n  onView(id) {\n    this.caseService.getCaseData(id);\n    this.caseService.getLinkedClient(id);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  onDispose(id) {\n    this.caseService.disposeCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n  \n  onDelete(id) {\n    this.caseService.deleteCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n  }\n}\n\n","<div class=\"grid-container\">\n        <div style=\"display: flex;\">\n            <h1 class=\"mat-h1\">Pre-Admitted Cases</h1>\n            <span class=\"flex-spacer\"></span>\n            <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n        </div>\n        <mat-accordion multi>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                 (closed)=\"panelOpenState = false\"\n                                 *ngFor=\"let case of cases,let i = index\" class=\"panel\"\n                                 hideToggle>\n              <mat-expansion-panel-header [collapsedHeight]=\"(isHandset$ | async) ? '129px' : ''\"\n              [expandedHeight]=\"(isHandset$ | async) ? '129px' : ''\" style=\"padding-top: 9px;\">\n                <mat-panel-title>\n                 {{i + 1}} ) {{case.stampNo}}\n                </mat-panel-title>\n                <mat-panel-description *ngIf=\"(isHandset$ | async)\" fxLayout=\"column\" >\n                  <p>{{ case.petitioner | slice:0:25 }}</p>\n                  <p style=\"color:red\" >V/s</p>\n                  <p>{{ case.respondent | slice:0:25 }}</p> \n                  <p style=\"color:black\">{{case.status}}</p>\n                </mat-panel-description>\n                <mat-panel-description *ngIf=\"(isHandset$ | async) === false\">\n                    <p>{{ case.petitioner | slice:0:50 }}</p>\n                    <p style=\"color:red;margin-left: 10px;\" >V/s</p>\n                    <p style=\"margin-left: 10px;\">{{ case.respondent | slice:0:50 }}</p>\n                    <span class=\"flex-spacer\"></span>\n                    <p style=\"margin-right: 70px;color :black\">{{case.status}}</p> \n                  </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div style=\"display: flex;\">\n                <button mat-raised-button color=\"primary\" (click)=\"onView(case._id)\">View</button>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDispose(case._id)\">Dispose</button>\n                <span class=\"flex-spacer\"></span>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDelete(case._id)\" >Permanent delete</button>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"cases.length != 0\">\n          <mat-paginator [length]=\"cases.length\"\n          [pageSize]=\"10\"\n          [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n</div>\n","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\n\nimport { ErrorService } from \"./error.service\";\n\n@Component({\n  templateUrl: \"./error.component.html\",\n  selector: \"app-error\",\n  // styleUrls: [\"./error.component.css\"]\n})\nexport class ErrorComponent {\n  private errorSub: Subscription;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string },private errorService: ErrorService) {}\n\n  ngOnInit() {\n    this.errorSub = this.errorService.getErrorListener().subscribe(message => {\n      this.data = { message: message };\n    });\n  }\n\n  onHandleError() {\n    this.errorService.handleError();\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>An Error Occurred!</h1>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{ data?.message }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-loginclient',\n  templateUrl: './loginclient.component.html',\n  styleUrls: ['./loginclient.component.css']\n})\nexport class LoginclientComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService : AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get data() { return this.loginForm.controls; }\n\n  onSubmit() {    \n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      this.authService.loginClient(this.data.username.value, this.data.password.value, \"client\")    \n    }\n  }\n}","<div class=\"card\">\n        <div role=\"alert\" *ngIf=\"submitted\">\n          Username or password is incorrect\n        </div>\n        <mat-card class=\"vache\">\n          <h3 style=\"text-align: center;\">Login as a Client</h3>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field style=\"width: 60%; margin-left: 20%; margin-right: 20%;\">\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n              <mat-icon matSuffix>face</mat-icon>\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\n            </mat-form-field>\n            <mat-form-field style=\"width: 60%; margin-left: 20%; margin-right: 20%;\">\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n              <mat-icon matSuffix>lock</mat-icon>\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\n            </mat-form-field>\n            <div style=\"width: 60%; margin-left: 20%; margin-right: 20%; margin-top: 20px; display: flex;\" >\n              <button mat-raised-button color=\"primary\">Login</button>\n              <span class=\"flex-spacer\"></span>\n              <a [routerLink]=\"['/registerclient']\">Don't have an account? Register here</a>\n            </div>\n          </form>\n        </mat-card>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport {io} from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private socket = io('http://localhost:4000');\n  constructor() { }\n\n  joinRoom(data) {\n    this.socket.emit('join', data);\n  }\n\n  sendMessage(data) {\n    this.socket.emit('message', data);\n  }\n\n  newMessageReceived() {\n    const observable = new Observable<{ username: String, message: String}>(observer => {\n      this.socket.on('new message', (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n    return observable;\n  }\n\n  typing(data) {\n    this.socket.emit('typing', data);\n  }\n\n  receivedTyping() {\n    const observable = new Observable<{ isTyping: boolean}>(observer => {\n      this.socket.on('typing', (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n    return observable;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription} from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { CaseService } from '../services/case.service';\nimport { Case } from '../models/case.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admitted',\n  templateUrl: './admitted.component.html',\n  styleUrls: ['./admitted.component.scss']\n})\nexport class AdmittedComponent implements OnInit, OnDestroy {\n  private caseSub: Subscription;\n  cases: Case[];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit() {\n    this.caseSub = this.caseService.getCasesUpdateListener().subscribe((data: Case[]) => {\n      this.cases = data;});\n      this.caseService.getadmittedCases();\n  }\n  panelOpenState = false;\n\n  onView(id) {\n    this.caseService.getCaseData(id);\n    this.caseService.getLinkedClient(id);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  onDispose(id) {\n    this.caseService.disposeCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n  \n  onDelete(id) {\n    this.caseService.deleteCase(id);\n    this.cases = this.cases.filter(function(e:Case) {return e._id !== id});\n    this.caseService.setCases(this.cases);\n    // this.caseService.getCases();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n  }\n}\n\n","<div class=\"grid-container\">\n        <div style=\"display: flex;\">\n            <h1 class=\"mat-h1\">Admitted Cases</h1>\n            <span class=\"flex-spacer\"></span>\n            <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n        </div>\n        <mat-accordion multi>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                 (closed)=\"panelOpenState = false\"\n                                 *ngFor=\"let case of cases,let i = index\" class=\"panel\"\n                                 hideToggle>\n              <mat-expansion-panel-header [collapsedHeight]=\"(isHandset$ | async) ? '129px' : ''\"\n              [expandedHeight]=\"(isHandset$ | async) ? '129px' : ''\" style=\"padding-top: 9px;\">\n                <mat-panel-title>\n                 {{i + 1}} ) {{case.stampNo}}\n                </mat-panel-title>\n                <mat-panel-description *ngIf=\"(isHandset$ | async)\" fxLayout=\"column\" >\n                  <p>{{ case.petitioner | slice:0:25 }}</p>\n                  <p style=\"color:red\" >V/s</p>\n                  <p>{{ case.respondent | slice:0:25 }}</p> \n                  <p style=\"color:black\">{{case.status}}</p>\n                </mat-panel-description>\n                <mat-panel-description *ngIf=\"(isHandset$ | async) === false\">\n                    <p>{{ case.petitioner | slice:0:50 }}</p>\n                    <p style=\"color:red;margin-left: 10px;\" >V/s</p>\n                    <p style=\"margin-left: 10px;\">{{ case.respondent | slice:0:50 }}</p>\n                    <span class=\"flex-spacer\"></span>\n                    <p style=\"margin-right: 70px;color :black\">{{case.status}}</p> \n                  </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div style=\"display: flex;\">\n                <button mat-raised-button color=\"primary\" (click)=\"onView(case._id)\">View</button>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDispose(case._id)\">Dispose</button>\n                <span class=\"flex-spacer\"></span>\n                <button mat-raised-button color=\"warn\" style=\"margin-left: 10px;\" (click)=\"onDelete(case._id)\" >Permanent delete</button>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"cases.length != 0\">\n          <mat-paginator [length]=\"cases.length\"\n          [pageSize]=\"10\"\n          [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n</div>\n","import { Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ErrorService {\n  private errorListener = new Subject<string>();\n\n  getErrorListener() {\n    return this.errorListener.asObservable();\n  }\n\n  throwError(message: string) {\n    this.errorListener.next(message);\n  }\n\n  handleError() {\n    this.errorListener.next(null);\n  }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-client-dashboard',\n  templateUrl: './client-dashboard.component.html',\n  styleUrls: ['./client-dashboard.component.scss']\n})\nexport class ClientDashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Total Cases', cols: 4, rows: 1, content: '10'},\n          { title: 'Total Admitted Cases', cols: 4, rows: 1, content:'6' },\n          { title: 'Total Disposed Cases', cols: 4, rows: 1, content:'4' },\n        ];\n      }\n\n      return [\n        { title: 'Total Cases', cols: 1, rows: 1, content: '10'},\n        { title: 'Total Admitted Cases', cols: 1, rows: 1, content:'6'  },\n        { title: 'Total Disposed Cases', cols: 1, rows: 1, content: '4' },\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n    <div style=\"display: flex;\">\n      <h1 class=\"mat-h1\">Dashboard</h1>\n      <span class=\"flex-spacer\"></span>\n      <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n    </div>\n    <mat-grid-list cols=\"4\" rowHeight=\"200px\">\n      <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n        <mat-card class=\"dashboard-card\" style=\"color:white;background-color:#607D8B;\">\n          <mat-card-header>\n            <mat-card-title>\n              <div></div>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"dashboard-card-content\">\n            <h1 class=\"mat-h1\">{{card.title}}</h1>\n            <h5 class=\"mt-h5\" style=\"padding-top: 17px;font-size:60px;\">{{card.content}}</h5>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" style=\"display: flex;\">\n    <span>Lawyer Portal</span>\n    <span class=\"flex-spacer\"></span>\n    <button mat-button [matMenuTriggerFor]=\"menu\"> Login\n          <mat-menu #menu=\"matMenu\">\n            <button [routerLink]=\"['/loginclient']\" mat-menu-item>Login as client</button>\n            <button [routerLink]=\"['/login']\" mat-menu-item>Login as Lawyer</button>\n          </mat-menu>\n      </button>\n      <button mat-button [matMenuTriggerFor]=\"menu1\"> Register\n        <mat-menu #menu1=\"matMenu\">\n          <button [routerLink]=\"['/registerclient']\" mat-menu-item>Register as client</button>\n          <button [routerLink]=\"['/register']\" mat-menu-item>Register as Lawyer</button>\n        </mat-menu>\n    </button>\n</mat-toolbar>\n","export class Addcase {\n        constructor(\n            public stampNo: string,\n            public fillingDate: Date,\n            public status: string,\n            public bench: string,\n            public petitioner: string,\n            public respondent: string,\n            public forum : string,\n            public district: string,\n            public postalCode: string,\n            public act?: string,\n            public RegNo?: string,\n            public RegDate?: Date,\n            public stage?:string,\n            public description?: string\n          ) {  }\n}","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Total Cases', cols: 4, rows: 1, content: '10'},\n          { title: 'Total Admitted Cases', cols: 4, rows: 1, content:'6' },\n          { title: 'Total Disposed Cases', cols: 4, rows: 1, content:'4' },\n          { title: 'Total Clients', cols: 4, rows: 1, content: '10' }\n        ];\n      }\n\n      return [\n        { title: 'Total Cases', cols: 1, rows: 1, content: '10'},\n        { title: 'Total Admitted Cases', cols: 1, rows: 1, content:'6'  },\n        { title: 'Total Disposed Cases', cols: 1, rows: 1, content: '4' },\n        { title: 'Total Clients', cols: 1, rows: 1, content: '10' }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n    <div style=\"display: flex;\">\n      <h1 class=\"mat-h1\">Dashboard</h1>\n      <span class=\"flex-spacer\"></span>\n      <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n    </div>\n    <mat-grid-list cols=\"4\" rowHeight=\"200px\">\n      <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n        <mat-card class=\"dashboard-card\" style=\"color:white;background-color:#607D8B;\">\n          <mat-card-header>\n            <mat-card-title>\n              <div></div>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"dashboard-card-content\">\n            <h1 class=\"mat-h1\">{{card.title}}</h1>\n            <h5 class=\"mt-h5\" style=\"padding-top: 17px;font-size:60px;\">{{card.content}}</h5>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { CalendarHeaderComponent } from './calendar-header.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, CalendarModule],\r\n  declarations: [CalendarHeaderComponent],\r\n  exports: [CalendarHeaderComponent],\r\n})\r\nexport class DemoUtilsModule {}","import {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { catchError } from \"rxjs/operators\";\r\n  import { throwError } from \"rxjs\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { MatDialog } from \"@angular/material/dialog\";\r\n  \r\n  import { ErrorComponent } from \"./error/error.component\";\r\n  import { ErrorService } from \"./error/error.service\";\r\n  \r\n  @Injectable()\r\n  export class ErrorInterceptor implements HttpInterceptor {\r\n  \r\n    constructor(private dialog: MatDialog, private errorService: ErrorService) {}\r\n  \r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n      return next.handle(req).pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          let errorMessage = \"An unknown error occurred!\";\r\n          if (error.error.message) {\r\n            errorMessage = error.error.message;\r\n          }\r\n          this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n          // this.errorService.throwError(errorMessage);\r\n          return throwError(error);\r\n        })\r\n      );\r\n    }\r\n  }\r\n  ","<app-main-nav *ngIf='(role === \"lawyer\" && !isLoading)'>\n  <router-outlet></router-outlet>\n</app-main-nav>\n\n<ng-container *ngIf='(role === \"client\" && !isLoading)'>\n  <app-client-main-nav>\n    <router-outlet></router-outlet>\n  </app-client-main-nav>\n</ng-container>\n\n\n<ng-container *ngIf='(role !== \"lawyer\" && !isLoading && role !== \"client\")'>\n  <app-homepage></app-homepage>\n  <router-outlet></router-outlet>\n</ng-container>\n<ng-container *ngIf=\"isLoading\">\n  <div style=\"align-content: center;\">\n      <mat-spinner></mat-spinner>\n  </div>\n</ng-container>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from \"./services/auth.service\";\nimport { ErrorService } from \"./error/error.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit,OnDestroy {\n  private roleSub: Subscription;\n  private errorSub: Subscription;\n  role:string;\n  isLoading:boolean = true;\n  hasError = false;\n\n  constructor(private authService: AuthService, private errorService: ErrorService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.roleSub = this.authService.getRoleListener().subscribe((role:string) => {\n      this.role = role;\n    });\n    this.authService.autoAuthUser();\n    this.isLoading = false;\n    this.errorSub = this.errorService.getErrorListener().subscribe(\n      message => this.hasError = message !== null\n    );\n  }\n\n  ngOnDestroy() {\n    this.roleSub.unsubscribe();\n    this.errorSub.unsubscribe();\n  }\n}\n","import {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpHandler\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  \r\n  import { AuthService } from \"./services/auth.service\";\r\n  \r\n  @Injectable()\r\n  export class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) {}\r\n  \r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n      const authToken = this.authService.getToken();\r\n      const authRequest = req.clone({\r\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\r\n      });\r\n      return next.handle(authRequest);\r\n    }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TryComponent } from './try.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModalModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory,\r\n    }),\r\n  ],\r\n  declarations: [TryComponent],\r\n  exports: [TryComponent],\r\n})\r\n\r\nexport class TryModule {}","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CalendarView } from 'angular-calendar';\r\n\r\n@Component({\r\n  selector: 'mwl-demo-utils-calendar-header',\r\n  template: `\r\n    <div class=\"row text-center\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"btn-group\">\r\n          <div\r\n            class=\"btn btn-primary\"\r\n            mwlCalendarPreviousView\r\n            [view]=\"view\"\r\n            [(viewDate)]=\"viewDate\"\r\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\r\n          >\r\n            Previous\r\n          </div>\r\n          <div\r\n            class=\"btn btn-outline-secondary\"\r\n            mwlCalendarToday\r\n            [(viewDate)]=\"viewDate\"\r\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\r\n          >\r\n            Today\r\n          </div>\r\n          <div\r\n            class=\"btn btn-primary\"\r\n            mwlCalendarNextView\r\n            [view]=\"view\"\r\n            [(viewDate)]=\"viewDate\"\r\n            (viewDateChange)=\"viewDateChange.next(viewDate)\"\r\n          >\r\n            Next\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"btn-group\">\r\n          <div\r\n            class=\"btn btn-primary\"\r\n            (click)=\"viewChange.emit(CalendarView.Month)\"\r\n            [class.active]=\"view === CalendarView.Month\"\r\n          >\r\n            Month\r\n          </div>\r\n          <div\r\n            class=\"btn btn-primary\"\r\n            (click)=\"viewChange.emit(CalendarView.Week)\"\r\n            [class.active]=\"view === CalendarView.Week\"\r\n          >\r\n            Week\r\n          </div>\r\n          <div\r\n            class=\"btn btn-primary\"\r\n            (click)=\"viewChange.emit(CalendarView.Day)\"\r\n            [class.active]=\"view === CalendarView.Day\"\r\n          >\r\n            Day\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n  `,\r\n})\r\nexport class CalendarHeaderComponent {\r\n  @Input() view: CalendarView;\r\n\r\n  @Input() viewDate: Date;\r\n\r\n  @Input() locale: string = 'en';\r\n\r\n  @Output() viewChange = new EventEmitter<CalendarView>();\r\n\r\n  @Output() viewDateChange = new EventEmitter<Date>();\r\n\r\n  CalendarView = CalendarView;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FlexLayoutModule} from '@angular/flex-layout';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport {MatTableModule} from '@angular/material/table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CasesComponent } from './cases/cases.component';\nimport { AddcaseComponent } from './addcase/addcase.component';\nimport { CaseinfoComponent } from './caseinfo/caseinfo.component';\nimport { LoginclientComponent } from './loginclient/loginclient.component';\nimport { RegisterclientComponent } from './registerclient/registerclient.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { ErrorComponent } from './error/error.component'\nimport { AuthInterceptor } from \"./auth-interceptor\";\nimport { ErrorInterceptor} from \"./error-interceptor\";\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { EditcaseComponent } from './editcase/editcase.component';\n// import { TryComponent } from './try/try.component';\nimport { PreadmittedComponent } from \"./pre-admitted/preadmitted.component\";\nimport { AdmittedComponent } from \"./admitted/admitted.component\";\nimport { DisposedComponent } from \"./disposed/disposed.component\";\nimport { ClientDashboardComponent } from \"./client-dashboard/client-dashboard.component\";\nimport { ClientMainNavComponent } from \"./client-main-nav/client-main-nav.component\";\nimport { ClientCasesComponent } from \"./client-cases/client-cases.component\";\nimport { ClientCaseinfoComponent } from \"./client-caseinfo/client-caseinfo.component\";\nimport { ClientChatroomComponent } from \"./client-chatroom/client-chatroom.component\";\n\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DemoUtilsModule } from './demo-utils/module';\nimport { TryModule } from \"./try/module\";\nimport { ChatroomComponent } from './chatroom/chatroom.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddcaseComponent,\n    CaseinfoComponent,\n    CasesComponent,\n    DashboardComponent,\n    MainNavComponent,\n    LoginComponent,\n    RegisterComponent,\n    LoginclientComponent,\n    RegisterclientComponent,\n    HomepageComponent,\n    ErrorComponent,\n    EditcaseComponent,\n    PreadmittedComponent,\n    AdmittedComponent,\n    DisposedComponent,\n    ChatroomComponent,\n    ClientDashboardComponent,\n    ClientMainNavComponent,\n    ClientCasesComponent,\n    ClientCaseinfoComponent,\n    ClientChatroomComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,FlexLayoutModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatMenuModule,\n    LayoutModule,\n    MatGridListModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    CKEditorModule,\n    MatTableModule,\n    NgbModalModule,\n    DemoUtilsModule,\n    TryModule,\n    FlatpickrModule.forRoot(),\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA // Tells Angular we will have custom tags in our templates\n  ]\n})\nexport class AppModule { }\n","import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { ThrowStmt } from '@angular/compiler';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Case } from '../models/case.model';\nimport { CaseService } from \"../services/case.service\";\n\n@Component({\n  selector: 'app-editcase',\n  templateUrl: './editcase.component.html',\n  styleUrls: ['./editcase.component.scss']\n})\nexport class EditcaseComponent implements OnInit{\n\n  private caseSub:Subscription;\n  File:Case;\n  private id:string;\n  breakpointObserver: any;\n\n  constructor(private caseService: CaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.caseService.getId();\n    this.caseService.getCaseData(this.id);\n    this.caseSub = this.caseService.getsingleCaseUpdateListener().subscribe((data:Case) => {\n      this.File = data;\n    })\n  }\n  @ViewChild('editcase') form:NgForm;\n\n  \n  onSubmit(form: NgForm) {\n    console.log(this.File);\n    this.caseService.updateCase(this.File);\n    this.router.navigate([\"/caseinfo\"]);\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n  }\n  // onReset(form: NgForm) {\n  //   form.onReset()\n  // }\n}\n","<div class=\"grid-container\">\n    <h1 class=\"mat-h1\">Edit Case</h1>\n  <form (ngSubmit)=\"onSubmit(editcase)\" #editcase=\"ngForm\" >\n    <mat-card>\n      <mat-card-content style=\"margin : 0px 30px\">\n        <div fxLayout=\"column\">\n      <mat-form-field class=\"half-width\">\n        <mat-label for='stampNo'>Stamp Number</mat-label>\n          <input matInput id='stampNo' name='stampNo' [(ngModel)]=\"File.stampNo\">\n        </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Filling Date\" name=\"fillingDate\" id=\"fillingDate\" [(ngModel)]=\"File.fillingDate\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Status</mat-label>\n        <mat-select [(ngModel)]=\"File.status\" name=\"status\" id=\"status\" required>\n          <mat-option value=\"pre-admitted\">pre-admitted</mat-option>\n          <mat-option value=\"admitted\">admitted</mat-option>\n          <mat-option value=\"disposed\">disposed</mat-option>\n          <mat-option value=\"rejected\">rejected</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <div fxLayout=\"row\">\n      <mat-form-field class=\"half-width\">\n        <mat-select placeholder=\"Forum\" name=\"forum\" id=\"forum\" [(ngModel)]=\"File.forum\">\n        <mat-option value=\"High Court\">High Court</mat-option>\n          <mat-option value=\"Supreme Court\">Supreme Court</mat-option>\n          <mat-option value=\"XYZ\" disabled>XYZ</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\" style=\"margin-left:10px\">\n        <mat-label>Bench</mat-label>\n        <input matInput  placeholder=\"Morbi\" name=\"bench\" id=\"bench\" [(ngModel)]=\"File.bench\">\n      </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\">\n    <mat-form-field class=\"half-width\">\n      <mat-label>Petitioner</mat-label>\n      <input matInput name=\"petitioner\" id=\"petitioner\" [(ngModel)]=\"File.petitioner\">\n    </mat-form-field>\n\n    <mat-form-field class=\"half-width\" style=\"margin-left: 10px;\">\n      <mat-label>Respondent</mat-label>\n      <input matInput name=\"respondent\" id=\"respondent\" [(ngModel)]=\"File.respondent\">\n    </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>District</mat-label>\n        <input matInput placeholder=\"Ex. Morbi\" name=\"district\" id=\"district\" [(ngModel)]=\"File.district\">\n      </mat-form-field>\n\n     <mat-form-field class=\"full-width\" style=\"margin-left: 10px;\">\n           <mat-label>Postal Code</mat-label>\n           <input matInput #postalCode maxlength=\"6\" placeholder=\"Ex. 363642\" name=\"postalCode\" id=\"postalCode\" [(ngModel)]=\"File.postalCode\">\n           <mat-hint>{{postalCode.value.length}} / 6</mat-hint>\n         </mat-form-field>\n      </div>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Act</mat-label>\n        <input matInput name=\"act\" id=\"act\" [(ngModel)]=\"File.act\">\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Reg Number</mat-label>\n        <input matInput name=\"RegNo\" id=\"RegNo\" [(ngModel)]=\"File.RegNo\">\n      </mat-form-field>\n\n      <mat-form-field class=\"half-width\">\n        <mat-label>Stage</mat-label>\n        <input matInput name=\"stage\" id=\"stage\" [(ngModel)]=\"File.stage\">\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <input matInput #message maxlength=\"256\" placeholder=\"Description\" name=\"description\" id=\"description\" [(ngModel)]=\"File.description\">\n        <mat-hint [align]=\"'end'\">{{message.value.length}} / 256</mat-hint>\n      </mat-form-field>\n  \n      <mat-form-field class=\"half-width\">\n        <input matInput [matDatepicker]=\"picker1\" placeholder=\"Reg. Date\" name=\"RegDate\" id=\"RegDate\" [(ngModel)]=\"File.RegDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n      </mat-form-field>\n\n      <mat-file-upload>\n        [labelText]=\"Document\"\n        [selectButtonText]=\"'Choose File'\"\n        [selectFilesButtonType]=\"button\"\n        [uploadButtonText]=\"'Submit'\"\n        [uploadButtonType]=\"submit\"\n        [allowMultipleFiles]=\"false\"\n        [showUploadButton]=\"true\"\n        [customSvgIcon]=\"'close_custom'\"\n        [acceptedTypes]=\"'.pdf, .docx'\"\n        (uploadClicked)=\"onUploadClicked($event)\"\n        (selectedFilesChanged)=\"onSelectedFilesChanged($event)\"\n      </mat-file-upload>\n\n  </div>\n  <mat-card-actions>\n    <br><br>\n    <button  mat-raised-button color=\"primary\" type=\"submit\">update</button> \n    <button mat-raised-button color=\"basic\" type=\"reset\">Clear</button>\n   </mat-card-actions>\n       </mat-card-content>\n    </mat-card>\n  </form>\n</div>","export class Lawyer {\r\n    constructor(\r\n    public firstname: string,\r\n    public lastname: string,\r\n    public birthdate: Date,\r\n    public email: string,\r\n    public phnno: string,\r\n    public year: string,\r\n    public address: string,\r\n    public uni: string,\r\n    public city: string,\r\n    public gender: string,\r\n    public prac: Number,\r\n    public password: string,\r\n    public bcn: string,\r\n    public nationality: string) { }\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Addcase } from '../models/addcase.model';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Case } from \"../models/case.model\";\nimport { Client } from '../models/client.model';\nimport { Lawyer } from '../models/lawyer.model';\nimport { LawyerInt } from '../models/lawyer.model copy';\n\nconst apiUrl = 'http://localhost:4000/api/';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaseService {\n\n  Cases = new Subject<Case[]>();\n  singleCase = new Subject<Case>();\n  Caseid:string;\n  linkedClient = new Subject<Client>();\n  linkedLawyer = new Subject<LawyerInt>();\n  clientData : Client;\n  lawyerData : LawyerInt;\n\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) { }\n\n  private handleError(error: HttpErrorResponse): any {\n    console.error(\n      `Backend returned code ${error.status}, ` +\n      `body was: ${error.message}`);\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  addCase(addcase: Addcase) {\n    this.http.post<Addcase>(apiUrl + 'addcase', addcase).pipe(\n      catchError(this.handleError)\n    )\n    .subscribe((res:any) => {\n      this.Caseid = res._id; \n      this.singleCase.next(res);\n      console.log('success');\n    }, (err: any) => {\n      console.log(err);\n    });\n  }\n\n  getCases() {\n    this.http.get<Case[]>(apiUrl+ 'cases').pipe(\n      map((data:any) => {\n        if(data) {\n          return data;\n        }\n        else {\n          catchError(this.handleError)\n        }\n      })\n    ).subscribe( (data:Case[]) => {\n      this.Cases.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  getpreadmittedCases() {\n    this.http.get<Case[]>(apiUrl+ 'preadmittedcases').pipe(\n      map((data:any) => {\n        if(data) {\n          return data;\n        }\n        else {\n          catchError(this.handleError)\n        }\n      })\n    ).subscribe( (data:Case[]) => {\n      this.Cases.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  getadmittedCases() {\n    this.http.get<Case[]>(apiUrl+ 'admittedcases').pipe(\n      map((data:any) => {\n        if(data) {\n          return data;\n        }\n        else {\n          catchError(this.handleError)\n        }\n      })\n    ).subscribe( (data:Case[]) => {\n      this.Cases.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  updateDetails(caseData) {\n    this.http.patch<Case>(apiUrl + 'case/' + caseData._id, {details: caseData.details}).pipe(\n      catchError(this.handleError)\n    )\n    .subscribe((data:Case) => {\n      this.singleCase.next(data);\n      this.router.navigate([\"/caseinfo\"]);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  updateCase(caseData) {\n    this.http.patch<Case>(apiUrl + 'editcase/' + caseData._id, caseData).pipe(\n      catchError(this.handleError)\n    ) .subscribe((data:Case) => {\n      this.singleCase.next(data);\n    }, (err) => {\n      console.log(err);\n    }); \n  }\n\n  deleteCase(id) {\n    this.http.delete<any>(apiUrl + 'case/' + id).pipe(\n      catchError(this.handleError)\n    ).subscribe((data) => {\n      alert(data.message);\n    });\n  }\n\n  getdisposedCases(){\n    this.http.get<Case[]>(apiUrl+ 'disposedcases').pipe(\n      map((data:any) => {\n        if(data) {\n          return data;\n        }\n        else {\n          catchError(this.handleError)\n        }\n      })\n    ).subscribe( (data:Case[]) => {\n      this.Cases.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  disposeCase(_id) {\n    this.http.patch<any>(apiUrl+'makedispose', {_id}).pipe(\n      catchError(this.handleError)\n    ).subscribe((data) => {\n      console.log(data);\n    })\n  }\n\n  addOrder(id,data:any) {\n    this.http.patch<Case>(`${apiUrl}case/order/${id}`,{order:data}).subscribe((CaseData:Case) => {\n      this.singleCase.next(CaseData);\n    }, (err:any) => {\n      alert('Please upload an pdf');\n    }); \n  }\n\n  onUploadDoc(file:FileList, id){\n    const formData: FormData = new FormData();\n    const files = file\n    for (let index = 0; index < files.length; index++) {\n      formData.append('file', files.item(index), files.item(index).name); \n    }\n    return this.http.post<any>(apiUrl+\"uploadPdf/\"+id,formData).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  onDeleteDoc(files, id) {\n    this.http.patch<Case>(apiUrl+'updateDoc/'+id, files).subscribe((data:Case) => {\n      this.singleCase.next(data);\n    }, (err:any) => {\n      console.log(err)\n    })\n  }\n  unlinkClient(){\n    this.linkedClient.next(null)\n  }\n\n  setSingleCaseDetails(caseData) {\n    this.singleCase.next(caseData);\n  }\n\n  setCases(data) {\n    this.Cases.next(data);\n  }\n  \n  setLinkedClient(data) {\n    this.linkedClient.next(data);\n  }\n\n  getCaseData(id) {\n    this.Caseid = id;\n    this.http.get<Case>(apiUrl + 'case/' + id).pipe(\n      catchError(this.handleError)\n    ).subscribe((data:Case) => {\n      this.singleCase.next(data);\n    });\n  }\n\n  linkClient(_id, id) {\n    this.http.patch<Case>(`${apiUrl}linkClient/${id}`, {userId:_id}).pipe(\n      catchError(this.handleError)\n    ) .subscribe((data:Case) => {\n      this.singleCase.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  getLinkedClient(id) {\n    this.http.get<Client>(`${apiUrl}getLinkedClient/${id}`).pipe(\n      catchError(this.handleError)\n    ) .subscribe((data:Client) => {\n      this.linkedClient.next(data);\n      this.clientData = data;\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  getLinkedLawyer(id) {\n    this.http.get<LawyerInt>(`${apiUrl}getLinkedLawyer/${id}`).pipe(\n      catchError(this.handleError)\n    ) .subscribe((data:LawyerInt) => {\n      this.linkedLawyer.next(data);\n      this.lawyerData = data;\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n  \n  getClient(id) {\n    this.http.get<Client>(`${apiUrl}getClient/${id}`).pipe(\n      catchError(this.handleError)\n    ) .subscribe((data:Client) => {\n      this.linkedClient.next(data);\n      this.clientData = data;\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n\n  searchclients(term): Observable<Client[]> {\n    console.log(term)\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<Client[]>(`${apiUrl}getClients?firstname=${term}`).pipe(\n      tap(x => console.log(x)),\n       catchError(this.handle<Client[]>('searchClients', []))\n    );\n  }\n  private handle<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n  getsingleCaseUpdateListener(){\n    return this.singleCase.asObservable();\n  }\n\n  getlinkedClientUpdateListener(){\n    return this.linkedClient.asObservable();\n  }\n\n  getlinkedLawyerUpdateListener(){\n    return this.linkedLawyer.asObservable();\n  }\n\n  getId(){\n    return this.Caseid;\n  }\n\n  returnClient() {\n    return this.clientData;\n  }\n\n  returnLawyer() {\n    return this.lawyerData;\n  }\n\n  getCasesUpdateListener() {\n    return this.Cases.asObservable();\n  }\n\n  downloadPDF(filename, filetype): any {\n    return this.http.get(apiUrl+ 'file/' + filename,\n    { responseType: 'blob' });\n  }\n\n  deletePDF(filename) {\n    this.http.delete<any>(apiUrl + 'deletefile/' + filename).pipe(\n      catchError(this.handleError)\n    ).subscribe((data) => {\n      alert(data.message);\n    });\n  }\n  \n  getClientCases() {\n    this.http.get<Case[]>(apiUrl+ 'getClientCases').pipe(\n      map((data:any) => {\n        if(data) {\n          return data;\n        }\n        else {\n          catchError(this.handleError)\n        }\n      })\n    ).subscribe( (data:Case[]) => {\n      this.Cases.next(data);\n    }, (err:any) => {\n      console.log(err);\n    }); \n  }\n}\n","<div id=\"mario-chat\">\n    <h2>{{ lawyerData.firstname }}  {{lawyerData.lastname}}</h2>\n    <div id=\"chat-window\">\n        <div *ngFor=\"let item of messageArray\">\n            <p [class.userMessage]=\"item.username == this.username\" [class.secUserMessage]=\"item.username != this.username\">{{ item.message }}</p>                \n        </div>\n        <div class=\"secUserMessage\" *ngIf=\"isTyping\">\n            <div class=\"typing typing-1\"></div>\n            <div class=\"typing typing-2\"></div>\n            <div class=\"typing typing-3\"></div>\n        </div>\n    </div>\n    <div style=\"display: flex;\"> \n    <input (keypress)=\"typing()\" [(ngModel)]=\"message\" name=\"message\" type=\"text\" style=\"width: 80%;\" placeholder=\"Message\"/>\n    <span class=\"flex-spacer\"></span>            \n    <button id=\"send\" (click)=\"sendMessage()\" style=\"width: 20%\">Send</button>\n</div>    \n</div>","import { Router, ActivatedRoute } from '@angular/router';\nimport { WebsocketService } from '../services/websocket.service';\nimport { AuthService } from '../services/auth.service'\nimport { Component, OnInit } from '@angular/core';\nimport { CaseService } from '../services/case.service';\nimport { Client } from '../models/client.model';\nimport { Lawyer } from '../models/lawyer.model';\nimport { LawyerInt } from '../models/lawyer.model copy';\n\n\n@Component({\n  selector: 'app-client-chatroom',\n  templateUrl: './client-chatroom.component.html',\n  styleUrls: ['./client-chatroom.component.scss']\n})\nexport class ClientChatroomComponent implements OnInit {\n\n  username: String;\n  email: String;\n  chatroom;\n  message: String;\n  messageArray: Array<{username: String, message: String}> = [];\n  isTyping = false;\n  lawyerData:LawyerInt;\n\n  constructor(private route: ActivatedRoute,\n    private webSocketService: WebsocketService,\n    private authService: AuthService,\n    private caseService: CaseService) {\n      this.webSocketService.newMessageReceived().subscribe(data => {\n        this.messageArray.push(data);\n        this.isTyping = false;\n      });\n      this.webSocketService.receivedTyping().subscribe(bool => {\n        this.isTyping = bool.isTyping;\n      });\n     }\n\n  ngOnInit(): void {\n    this.lawyerData = this.caseService.returnLawyer();\n    const currentUser = this.authService.getUserId();\n    this.username = this.authService.getuserName();\n    this.chatroom = this.lawyerData.userId + currentUser\n\n    this.webSocketService.joinRoom({lawyer: this.lawyerData.userId, room: this.chatroom, client: currentUser});\n    this.authService.getChatRoomsChat(this.chatroom).subscribe(messages => {\n      this.messageArray = messages;\n    }); \n  }\n\n  sendMessage() {\n    this.webSocketService.sendMessage({room: this.chatroom, user: this.username, message: this.message});\n    this.message = '';\n  }\n\n  typing() {\n    this.webSocketService.typing({room: this.chatroom, user: this.username});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { AuthService } from '../services/auth.service';\n@Component({\n  selector: 'app-registerclient',\n  templateUrl: './registerclient.component.html',\n  styleUrls: ['./registerclient.component.css']\n})\nexport class RegisterclientComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted:boolean = false;\n  \n  constructor(private authService: AuthService, private formBuilder: FormBuilder, private router: Router, private _snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phnno: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      city: ['', Validators.required],\n      gender: ['', [Validators.required]],\n      birthdate: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmpassword: ['', Validators.required]\n    },\n    {\n            validator: MustMatch('password', 'confirmpassword')\n        });\n  }\n\n  get data() { return this.registerForm.controls; }\n\n  // getErrorMessage() {\n  //   if (this.email.hasError('required')) {\n  //     return 'You must enter a value';\n  //   }\n\n  //   return this.email.hasError('email') ? 'Not a valid email' : '';\n  // }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    this.authService.createClient(this.registerForm.value, 'client');\n}\n\nonReset() {\n    this.submitted = false;\n    this.registerForm.reset();\n}\n}","<div class=\"grid-container\">\n        <mat-card>\n          <h3 style=\"text-align: center;\">Register as a Client</h3>\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\">\n              <mat-form-field class=\"w-100\">\n                <input type=\"text\" matInput placeholder=\"First Name\" formControlName=\"firstname\" required>\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                <mat-error *ngIf=\"data.firstname.errors?.required\">First Name is required</mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\">\n                <input type=\"text\" matInput placeholder=\"Last Name\" formControlName=\"lastname\" required>\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                <mat-error *ngIf=\"data.lastname.errors?.required\">Last Name is required</mat-error>\n              </mat-form-field>\n              \n            <mat-radio-group required aria-label=\"Select\" matInput formControlName=\"gender\" placeholder=\"Gender\" class=\"w-100\">Gender:\n\t\t\t  <mat-radio-button style=\"margin-left: 5px;\" value=\"1\">Male</mat-radio-button>\n\t\t\t  <mat-radio-button style=\"margin-left: 5px;\" value=\"2\">female</mat-radio-button>\n\t\t\t  <mat-radio-button style=\"margin-left: 5px;\" value=\"3\">Other</mat-radio-button>\n\t\t\t</mat-radio-group>\n\t\t\t<mat-form-field class=\"w-100\">\n\t\t\t  <mat-label>Enter your email</mat-label>\n\t\t\t  <input matInput placeholder=\"abc@example.com\"required formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && data.email.errors }\">\n\t\t\t  <mat-icon matSuffix>email</mat-icon>\n\t\t\t  <mat-error *ngIf=\"submitted && data.email.errors\" class=\"invalid-feedback\">\n                <mat-error *ngIf=\"data.email.errors?.required\">Email is required</mat-error>\n                <mat-error *ngIf=\"data.email.errors?.email\">Email must be a valid email address</mat-error>\n              </mat-error>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field class=\"w-100\">\n              <input type=\"text\" matInput placeholder=\"Contact number\" required formControlName=\"phnno\" [ngClass]=\"{ 'is-invalid': submitted && data.phnno.errors }\">\n              <mat-icon matSuffix>phone</mat-icon>\n              <mat-error *ngIf=\"submitted && data.phnno.errors\" class=\"invalid-feedback\">\n                <mat-error *ngIf=\"data.phnno.errors?.required\">Contact number is required</mat-error>\n                <mat-error *ngIf=\"data.phnno.errors?.pattern\">Contact number must be with code +91</mat-error>\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\">\n              <input type=\"text\" matInput placeholder=\"City\" required formControlName=\"city\">\n              <mat-icon matSuffix>location_city</mat-icon>\n              <mat-error *ngIf=\"data.city.errors?.required\">City is required</mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\">\n              <mat-label>Birthdate</mat-label>\n              <input matInput [matDatepicker]=\"picker2\" formControlName=\"birthdate\" required>\n              <mat-icon matSuffix><mat-datepicker-toggle [for]=\"picker2\"></mat-datepicker-toggle></mat-icon>\n              <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\n              <mat-error *ngIf=\"data.birthdate.errors?.required\">Birthdate is required</mat-error>\n              </mat-form-field>\n            <mat-form-field class=\"w-100\">\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\" required [ngClass]=\"{ 'is-invalid': submitted && data.password.errors }\">\n              <mat-icon matSuffix>lock</mat-icon>\n              <mat-error *ngIf=\"submitted && data.password.errors\">\n\t              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\n\t              <mat-error *ngIf=\"data.password.errors.minlength\">Password must be at least 8 characters</mat-error>\n\t          </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\">\n              <input type=\"password\" matInput placeholder=\"Confirm Password\" formControlName=\"confirmpassword\" required [ngClass]=\"{ 'is-invalid': submitted && data.confirmpassword.errors }\">\n              <mat-error *ngIf=\"submitted && data.confirmpassword.errors\">\n                        <mat-error *ngIf=\"data.confirmpassword.errors.required\">Confirm Password is required</mat-error>\n                        <mat-error *ngIf=\"data.confirmpassword.errors.mustMatch\">Passwords must match</mat-error>\n               </mat-error>\n              <mat-icon matSuffix>lock</mat-icon>\n            </mat-form-field>\n            <div class=\"w-100\" style=\"display: flex;\">\n              <button mat-raised-button color=\"primary\">Register</button>\n              <button style=\"margin-left: 10px;\" mat-stroked-button color=\"warn\" type=\"reset\" (click)=\"onReset()\">cancel</button>\n              <span class=\"flex-spacer\"></span>\n              <a [routerLink]=\"['/loginclient']\" style=\"margin-top: 5px;\">Already registered? Login here</a>\n            </div>\n          </form>\n        </mat-card>\n</div>\n\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Router, RouterLink } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { AuthData } from \"../models/auth-data.model\";\r\nimport { Lawyer } from '../models/lawyer.model';\r\nimport { Client } from '../models/client.model';\r\n\r\nconst BACKEND_URL = 'http://localhost:4000/api';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private userName: string;\r\n  private userId: string;\r\n  private role = new Subject<String>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getuserName() {\r\n    return this.userName;\r\n  }\r\n\r\n  getRole() {\r\n    return this.role;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getRoleListener() {\r\n    return this.role.asObservable();\r\n  }\r\n\r\n  createLawyer(lawyer: Lawyer, role: string) {\r\n    const data = {...lawyer, role} \r\n    this.http.post<{ token: string; role:string; userId: string; userName: string }>(\r\n      BACKEND_URL + \"/signupLawyer\", data)\r\n      .subscribe( (response) => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        const role = response.role;\r\n        if (token) {\r\n          this.isAuthenticated = true;\r\n          this.userId = response.userId;\r\n          this.userName = response.userName;\r\n          this.role.next(role);\r\n          this.saveAuthData(token, role, this.userId, this.userName);\r\n          this.router.navigate([\"/dashboard\"]);\r\n        }\r\n      },\r\n      error => {\r\n        this.role.next(null);\r\n      }\r\n    );\r\n  }\r\n\r\n  createClient(client: Client, role: string) {\r\n    const data = {...client, role} \r\n    this.http.post<{ token: string; role:string; userId: string, userName: string  }>(\r\n      BACKEND_URL + \"/signupClient\", data)\r\n      .subscribe( (response) => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        const role = response.role;\r\n        if (token) {\r\n          this.isAuthenticated = true;\r\n          this.userId = response.userId;\r\n          this.userName = response.userName;\r\n          this.role.next(role);\r\n          this.saveAuthData(token, role, this.userId, this.userName);\r\n          this.router.navigate([\"/clientdashboard\"]);\r\n        }\r\n      },\r\n      error => {\r\n        this.role.next(null);\r\n      }\r\n    );\r\n  }\r\n\r\n  loginLawyer(email: string, password: string, role: string) {\r\n    const authData: AuthData = { email: email, password: password, role: role };\r\n    this.http\r\n      .post<{ token: string; role:string; userId: string; userName: string }>(\r\n        BACKEND_URL + \"/login\",\r\n        authData\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          const token = response.token;\r\n          this.token = token;\r\n          const role = response.role;\r\n          if (token) {\r\n            this.isAuthenticated = true;\r\n            this.userId = response.userId;\r\n            this.userName = response.userName;\r\n            this.role.next(role);\r\n            this.saveAuthData(token, role, this.userId, this.userName);\r\n            console.log(this.userName)\r\n            this.router.navigate([\"/dashboard\"]);\r\n          }\r\n        },\r\n        error => {\r\n          alert(\"Wrong Credentials!\");\r\n          this.role.next(null);\r\n        }\r\n      );\r\n  }\r\n\r\n  loginClient(email: string, password: string, role: string) {\r\n    const authData: AuthData = { email: email, password: password, role: role };\r\n    this.http\r\n      .post<{ userId: string ,token: string; role:string, userName: string}>(\r\n        BACKEND_URL + \"/loginClient\",\r\n        authData\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          const token = response.token;\r\n          this.token = token;\r\n          const role = response.role;\r\n          if (token) {\r\n            this.isAuthenticated = true;\r\n            this.userId = response.userId;\r\n            this.userName = response.userName;\r\n            this.role.next(role);\r\n            this.saveAuthData(token, role, this.userId, this.userName);\r\n            this.router.navigate([\"/clientdashboard\"]);\r\n          }\r\n        },\r\n        error => {\r\n          this.role.next(null);\r\n        }\r\n      );\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    this.token = authInformation.token;\r\n    this.isAuthenticated = true;\r\n    const role = authInformation.role;\r\n    this.userId = authInformation.userId;\r\n    this.userName = authInformation.userName;\r\n    this.role.next(role);\r\n    if(role === \"lawyer\") {\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    if(role === \"client\"){\r\n      this.router.navigate([\"/clientdashboard\"\r\n    ])\r\n    }\r\n  }\r\n\r\n  logoutLawyer() {\r\n    this.http.post<any>(BACKEND_URL + \"/logoutLawyer\", \"\")\r\n    .subscribe( response => {\r\n      this.token = null;\r\n      this.role.next(null);\r\n      this.userId = null;\r\n      this.userName = null;\r\n      this.isAuthenticated = false;\r\n      this.clearAuthData();\r\n      this.router.navigate([\"/login\"]);\r\n      alert(\"Logout Successfully !\");\r\n    }, error => {\r\n      alert(error);\r\n    });\r\n  }\r\n\r\n  getChatRoomsChat(chatRoom) {\r\n    return this.http.get<any>('http://localhost:4000/api/chatroom/' + chatRoom);\r\n  }\r\n\r\n  private saveAuthData(token: string, role: string, userId: string, userName: string) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"role\", role);\r\n    localStorage.setItem(\"userId\", userId);\r\n    localStorage.setItem(\"userName\", userName);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userName\")\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const role = localStorage.getItem(\"role\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const userName = localStorage.getItem(\"userName\");\r\n    if (!token) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      role: role,\r\n      userId: userId,\r\n      userName: userName\r\n    };\r\n  }\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Case } from '../models/case.model';\nimport { Router } from '@angular/router';\nimport { CaseService } from '../services/case.service';\n\n@Component({\n  selector: 'app-client-cases',\n  templateUrl: './client-cases.component.html',\n  styleUrls: ['./client-cases.component.scss']\n})\nexport class ClientCasesComponent implements OnInit ,OnDestroy{\n\n  private caseSub: Subscription;\n  cases: Case[];\n\n  constructor(private breakpointObserver: BreakpointObserver, private caseService: CaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.caseSub = this.caseService.getCasesUpdateListener().subscribe((data: Case[]) => {\n      this.cases = data;\n     });\n    this.caseService.getClientCases();\n  }\n  panelOpenState = false;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  onView(id) {\n    this.caseService.getLinkedLawyer(id)\n    this.caseService.getCaseData(id);\n    this.router.navigate([\"/clientcaseinfo\"]);\n  }\n\n  ngOnDestroy(): void {\n    this.caseSub.unsubscribe();\n  }\n\n}\n","  <div class=\"grid-container\">\n\n    <div style=\"display: flex;\">\n        <h1 class=\"mat-h1\">Cases</h1>\n        <span class=\"flex-spacer\"></span>\n        <mat-label class=\"mat-h2\" style=\"padding-right: 20px;\">Filter</mat-label>\n    </div>\n    <mat-accordion multi>\n        <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                             (closed)=\"panelOpenState = false\"\n                             *ngFor=\"let case of cases,let i = index\" class=\"panel\"\n                             hideToggle>\n          <mat-expansion-panel-header [collapsedHeight]=\"(isHandset$ | async) ? '129px' : ''\"\n          [expandedHeight]=\"(isHandset$ | async) ? '129px' : ''\" style=\"padding-top: 9px;\">\n            <mat-panel-title>\n             {{i + 1}} ) {{case.stampNo}}\n            </mat-panel-title>\n            <mat-panel-description *ngIf=\"(isHandset$ | async)\" fxLayout=\"column\" >\n              <p>{{ case.petitioner | slice:0:25 }}</p>\n              <p style=\"color:red\" >V/s</p>\n              <p>{{ case.respondent | slice:0:25 }}</p>\n              <p style=\"color:black\">{{case.status}}</p>\n            </mat-panel-description>\n            <mat-panel-description *ngIf=\"(isHandset$ | async) === false\">\n                <p>{{ case.petitioner | slice:0:50 }}</p>\n                <p style=\"color:red;margin-left: 10px;\" >V/s</p>\n                <p style=\"margin-left: 10px;\">{{ case.respondent | slice:0:50 }}</p>\n                <span class=\"flex-spacer\"></span>\n                <p style=\"margin-right: 70px;color :black\">{{case.status}}</p>\n              </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div style=\"display: flex;\">\n            <button mat-raised-button color=\"primary\" (click)=\"onView(case._id)\">View</button>\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n      <mat-divider></mat-divider>\n      <div *ngIf=\"cases.length != 0\">\n      <mat-paginator [length]=\"cases.length\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n    </div>\n</div>\n\n","import {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Router\r\n  } from \"@angular/router\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { Observable } from \"rxjs\";\r\n  \r\n  import { AuthService } from \"../app/services/auth.service\";\r\n  \r\n  @Injectable()\r\n  export class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n  \r\n    canActivate(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n    ): boolean | Observable<boolean> | Promise<boolean> {\r\n      const isAuth = this.authService.getIsAuth();\r\n      const role = String(this.authService.getRole())\r\n      if (!isAuth && role !== \"lawyer\") {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return isAuth;\r\n    }\r\n  }","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours,\n} from 'date-fns';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\nimport { CaseService } from '../services/case.service';\nimport { Case } from '../models/case.model';\nimport { Order } from '../caseinfo/caseinfo.component';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n};\ninterface Film {\n  id: string;\n  _id: string;\n  orderNote: string;\n  orderDate: Date;\n}\n\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['try.component.scss'],\n  templateUrl: 'try.component.html',\n})\nexport class TryComponent implements OnInit{\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-fw fa-pencil-alt\"></i>',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter((iEvent) => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  \n  events$: Observable<CalendarEvent<{ film: Film }>[]>;\n  events: CalendarEvent[] = [{\n    start: subDays(startOfDay(new Date()), 1),\n    end: addDays(new Date(), 1),\n    title: 'A 3 day event',\n    color: colors.red,\n    actions: this.actions,\n    allDay: true,\n    resizable: {\n      beforeStart: true,\n      afterEnd: true,\n    },\n    draggable: true,\n  }\n  ];\n\n  activeDayIsOpen: boolean = true;\n  private caseSub: Subscription;\n\n  constructor(private modal: NgbModal, private caseService: CaseService, private http: HttpClient) {}\n\n  dayClicked({\n    date,\n    events,\n  }: {\n    date: Date;\n    events: CalendarEvent<{ film: Film }>[];\n  }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  data: Case[];\n  orders: any = [];\n\n  ngOnInit(){\n    this.events$ = this.http\n      .get<any>('http://localhost:4000/api/calendarOrders')\n      .pipe(\n        map((results) => {\n          return results.map((film: Film) => {\n            return {\n              title: `${film.id}: ${film.orderNote}`,\n              start: new Date(\n                film.orderDate\n              ),\n              color: colors.yellow,\n              allDay: true,\n              meta: {\n                film,\n              },\n            };\n          });\n        })\n      );\n  }\n}\n","<div class=\"grid-container\">\n    <div >\n      <h1 mat-h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h1>\n    </div>\n    <div>\n      <div>\n        <button\n          mat-flat-button color=\"primary\"\n          mwlCalendarPreviousView\n          [view]=\"view\"\n          [(viewDate)]=\"viewDate\"\n          (viewDateChange)=\"closeOpenMonthViewDay()\"\n        >\n          Previous\n      </button>\n        <button\n        mat-flat-button\n          mwlCalendarToday\n          [(viewDate)]=\"viewDate\"\n        >\n          Today\n        </button>\n        <button\n        mat-flat-button color=\"primary\"\n          mwlCalendarNextView\n          [view]=\"view\"\n          [(viewDate)]=\"viewDate\"\n          (viewDateChange)=\"closeOpenMonthViewDay()\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n    \n  <br />\n  <div [ngSwitch]=\"view\" div *ngIf=\"events$ | async; let events\">\n    <mwl-calendar-month-view\n      *ngSwitchCase=\"CalendarView.Month\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      [activeDayIsOpen]=\"activeDayIsOpen\"\n      (dayClicked)=\"dayClicked($event.day)\"\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n    >\n    </mwl-calendar-month-view>\n    <mwl-calendar-week-view\n      *ngSwitchCase=\"CalendarView.Week\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n    >\n    </mwl-calendar-week-view>\n    <mwl-calendar-day-view\n      *ngSwitchCase=\"CalendarView.Day\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [refresh]=\"refresh\"\n      (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n      (eventTimesChanged)=\"eventTimesChanged($event)\"\n    >\n    </mwl-calendar-day-view>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CasesComponent } from './cases/cases.component';\nimport { PreadmittedComponent } from \"./pre-admitted/preadmitted.component\";\nimport { AdmittedComponent } from \"./admitted/admitted.component\";\nimport { DisposedComponent } from \"./disposed/disposed.component\";\nimport { AddcaseComponent } from './addcase/addcase.component';\nimport { CaseinfoComponent } from './caseinfo/caseinfo.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginclientComponent } from './loginclient/loginclient.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterclientComponent } from './registerclient/registerclient.component';\nimport { AuthGuard } from \"../app/auth.guard\";\nimport { EditcaseComponent } from './editcase/editcase.component';\nimport { TryComponent } from './try/try.component';\nimport { ChatroomComponent } from \"./chatroom/chatroom.component\";\nimport { ClientDashboardComponent } from './client-dashboard/client-dashboard.component';\nimport { ClientCasesComponent } from './client-cases/client-cases.component';\nimport { ClientCaseinfoComponent } from './client-caseinfo/client-caseinfo.component';\nimport { ClientChatroomComponent } from './client-chatroom/client-chatroom.component';\n\nconst routes: Routes = [\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'cases', component: CasesComponent, canActivate: [AuthGuard]},\n  {path: 'preadmittedcases', component: PreadmittedComponent, canActivate: [AuthGuard]},\n  {path: 'admittedcases', component: AdmittedComponent, canActivate: [AuthGuard]},\n  {path: 'disposedcases', component: DisposedComponent, canActivate: [AuthGuard]},\n  {path: 'addcase', component: AddcaseComponent, canActivate: [AuthGuard]},\n  { path: 'caseinfo', component: CaseinfoComponent, canActivate: [AuthGuard]},\n  { path: 'try', component: TryComponent, canActivate: [AuthGuard]},\n  { path: 'editcase', component: EditcaseComponent, canActivate: [AuthGuard]},\n  { path: 'chatroom', component: ChatroomComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'loginclient', component: LoginclientComponent },\n  { path: 'registerclient', component: RegisterclientComponent },\n  { path: 'clientdashboard', component: ClientDashboardComponent},\n  { path: 'clientcases', component: ClientCasesComponent},\n  { path: 'clientcaseinfo', component: ClientCaseinfoComponent},\n  { path: 'clientChatroom', component: ClientChatroomComponent},\n  { path: '**', component:LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation: 'reload',\n    relativeLinkResolution: 'legacy'\n})],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService : AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get data() { return this.loginForm.controls; }\n\n  onSubmit() {    \n  //   if (this.loginForm.invalid) {\n  //     return;\n  //   } else if (this.data.username.value == localStorage.getItem(\"username\") && this.data.password.value == localStorage.getItem(\"password\")) {\n  //     this.router.navigate(['/home']);\n  //   } else {\n  //     this.submitted = true;      \n  //   }\n  const value = this.loginForm.value;\n    this.authService.loginLawyer(value.username, value.password, \"lawyer\")\n  }\n}","<div class=\"card\">\n        <div role=\"alert\" *ngIf=\"submitted\">\n          Username or password is incorrect\n        </div>\n        <mat-card>\n          <h3 mat-h3 style=\"text-align: center;\" class=\"vache\">Login as a Lawyer</h3>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field style=\"width: 60%; margin-left: 20%; margin-right: 20%;\">\n              <input class=\"mast\" type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n              <mat-icon matSuffix>face</mat-icon>\n              <mat-error *ngIf=\"data.username.errors?.required\">Username is required</mat-error>\n            </mat-form-field>\n            <mat-form-field style=\"width: 60%; margin-left: 20%; margin-right: 20%;\">\n              <input class=\"mast\" type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n              <mat-icon matSuffix>lock</mat-icon>\n              <mat-error *ngIf=\"data.password.errors?.required\">Password is required</mat-error>\n            </mat-form-field>\n            <div style=\"width: 60%; margin-left: 20%; margin-right: 20%; display: flex; margin-top: 20px;\">\n              <button mat-raised-button color=\"primary\" [disabled]=\"loginForm.invalid\">Login</button>\n              <span class=\"flex-spacer\"></span>\n              <a [routerLink]=\"['/register']\">Don't have an account? Register here</a>\n            </div>\n          </form>\n        </mat-card>\n      </div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { Case } from '../models/case.model';\nimport { CaseService } from '../services/case.service';\nimport * as DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Client } from '../models/client.model';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface Order {\n  id:string;\n  _id?:string;\n  orderDate: Date;\n  orderNote?: string ;\n}\nexport interface Note {\n  _id?: string;\n  title: string;\n  note: string;\n  createdAt: Date;\n}\n\n@Component({\n  selector: 'app-caseinfo',\n  templateUrl: './caseinfo.component.html',\n  styleUrls: ['./caseinfo.component.scss']\n})\nexport class CaseinfoComponent implements OnInit,OnDestroy {\n\n  constructor(private caseService: CaseService, private router: Router, private sanitizer: DomSanitizer) { }\n\n  private caseSub : Subscription;\n  caseData:Case;\n  private id:string;\n  public details:string;\n  public linkedClient: Client;\n  public linkedclientSub: Subscription;\n\n  public Editor = DecoupledEditor;\n\n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  onEditCase() {\n    console.log(this.caseData);\n    this.router.navigate([\"/editcase\"]);\n  }\n\n  orders: Order[];\n  newOrderNote: string;\n  displayNextOrder:boolean = false;\n  displayedColumns: string[] = ['Order Date', 'Note', 'Action'];\n  \n\n  onDetailsUpdated() {\n    this.caseData.details = this.details;\n    this.caseService.updateDetails(this.caseData);\n  }\n  \n  onNewOrder(data:NgForm) {\n    if(!data.value.note) {\n      data.value.note = \"No Note has been added\";\n    }\n    this.orders = this.caseData.orders.concat({id:this.caseData.stampNo, orderDate:data.value.orderDate, orderNote: data.value.note});\n    this.caseData.orders = this.orders;\n    this.caseService.updateCase(this.caseData);\n    data.resetForm();\n    this.orders.sort(function(a, b) {\n      var c:any = new Date(a.orderDate);\n      var d:any = new Date(b.orderDate);\n      return d-c;\n  });\n  if(this.orders.length == 0) {\n    this.displayNextOrder =false;\n  }\n  else if(new Date(this.orders[0].orderDate) > new Date()) {\n      this.displayNextOrder = true;\n    }\n  }\n\n  onDeleteOrder(id) {\n    this.orders = this.orders.filter(function(e) {return e._id != id});\n    this.caseData.orders = this.orders;\n    this.caseService.updateCase(this.caseData);\n    this.orders.sort(function(a, b) {\n      var c:any = new Date(a.orderDate);\n      var d:any = new Date(b.orderDate);\n      return d-c;\n    });\n     \n    if(this.caseData.orders.length==0) {\n      this.displayNextOrder =false;\n    }\n    else if(new Date(this.orders[0].orderDate) > new Date()) {\n      this.displayNextOrder = true;\n    }\n  }\n\n  newTitle: string = '';\n  newNote:string = '';\n  notes: Note[];\n  editNote: Note;\n  editNoteMode: boolean = false;\n\n  @ViewChild('addNote') form:NgForm;\n  onAddNote(data:NgForm) {\n    console.log(this.form.value);\n    this.notes = this.notes.concat({title: data.value.title, note:data.value.Note, createdAt: new Date()});\n    console.log(this.notes);\n    this.caseData.notes = this.notes;\n    this.caseService.updateCase(this.caseData);\n    data.resetForm();\n  }\n\n  onEditNote(data:NgForm) {\n    this.editNote.title = data.value.title;\n    this.editNote.note = data.value.Note;\n    this.notes[this.editNote._id] = this.editNote;\n    console.log(this.notes);\n    this.caseData.notes = this.notes;\n    this.caseService.updateCase(this.caseData);\n    this.editNote = null;\n    this.editNoteMode = false;\n    this.newTitle = \"\";\n    this.newNote = \"\";\n  }\n\n  onEditMode(data) {\n    this.editNote = data;\n    this.editNoteMode = true;\n    this.newNote = this.editNote.note;\n    this.newTitle = this.editNote.title;\n  }\n\n  onDeleteNote(id) { \n    this.notes = this.caseData.notes.filter(function(e) {return e._id != id});\n    this.caseData.notes = this.notes;\n    this.caseService.updateCase(this.caseData);\n   }\n\n  fileToUpload: FileList = null;\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files;\n    if(this.fileToUpload.length != 0) {\n    this.caseService.onUploadDoc(this.fileToUpload, this.caseData._id).subscribe((data:any)=> {\n      this.files = data;\n      this.caseData.docs = data;\n      console.log(data);\n    })\n  } }\n\n  DocColumns: string[] = ['Name', 'Size', 'Created_At', 'Actions'];\n  files: any;\n\n  onLinkClient(data:Client, id) {\n    this.caseService.linkClient(data.userId, id);\n    this.caseData.client = data.userId;\n    this.caseService.getClient(data._id);\n  }\n\n  unlink() {\n    this.linkedClient = null;\n    this.caseData.client = null;\n    this.caseService.updateCase(this.caseData);\n    this.caseService.unlinkClient();\n  }\n  clients$: Observable<Client[]>;\n  private searchTerms = new Subject<string>();\n  display: string[] = ['firstName','lastName', 'Contact', 'Email', 'Action'];\n\n  \n\n  downloadPdf(filename, contentType) {\n    this.caseService.downloadPDF(filename, contentType).subscribe(\n      (res) => {\n        const file = new Blob([(res)], { type: \"application/pdf\" });\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL);\n      }\n    );\n  }\n\n  deletePdf(filename) {\n    this.files = this.files.filter( function(e) {\n      return e.filename != filename\n    })\n    this.caseData.docs = this.files;\n    console.log(this.files);\n    console.log(this.caseData);\n    this.caseService.onDeleteDoc(this.files, this.caseData._id);\n    this.caseService.deletePDF(filename);\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  onMessage(){\n    this.router.navigate([\"/chatroom\"]);\n  }\n  ngOnInit(): void {\n    this.clients$ = this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.caseService.searchclients(term.toLowerCase()))\n    );\n\n      this.linkedclientSub = this.caseService.getlinkedClientUpdateListener().subscribe((data:Client) => {\n        this.linkedClient = data;\n      });\n\n      \n    this.caseSub = this.caseService.getsingleCaseUpdateListener().subscribe((data:Case) => {\n      this.caseData = data;\n      this.details = data.details;\n      this.orders = data.orders;\n      this.notes = data.notes;\n      this.files = data.docs;\n      this.caseData.orders.sort(function(a, b) {\n        var c:any = new Date(a.orderDate);\n        var d:any = new Date(b.orderDate);\n        return d-c;\n      });\n      if(new Date(this.caseData.orders[0].orderDate) > new Date()) {\n        this.displayNextOrder = true;\n      }\n    })\n\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.caseSub.unsubscribe();\n    this.linkedclientSub.unsubscribe();\n  }\n}","<div class=\"grid-container\">\n    <h1 class=\"mat-h1\">Case Info</h1>\n    <mat-card style=\"margin: 20px 50px;\">\n        <mat-card-content style=\"min-height: 510px;\n        max-height: auto;\">\n<mat-tab-group mat-align-tabs=\"start\">\n  <mat-tab label=\"Case Info\">\n    <div fxLayout=\"column\" style=\"display: flex;margin: 20px 20px;\">\n      <div fxLayout=\"row\">\n        <mat-label>Stamp No: {{caseData.stampNo}}</mat-label>\n        <mat-label style=\"margin-left: 30px;\">Filling Date: {{caseData.fillingDate | date}}</mat-label>\n      </div>\n      <hr *ngIf=\"(caseData.RegNo || caseData.RegDate)\">\n      <div fxLayout=\"row\">\n        <mat-label *ngIf=\"caseData.RegNo\">Reg No: {{caseData.RegNo}}</mat-label>\n        <mat-label *ngIf=\"caseData.RegDate\" style=\"margin-left: 30px;\">Reg Date: {{caseData.RegDate | date}}</mat-label>\n      </div>\n      <hr>\n      <mat-label>Retitioner: {{caseData.petitioner}}</mat-label>\n      <mat-label>Respondent: {{caseData.respondent}}</mat-label>\n      <mat-label>Bench: {{caseData.bench}}</mat-label>\n      <mat-label>Status: {{caseData.status}}</mat-label>\n      <mat-label>District: {{caseData.district}}</mat-label>\n      <mat-label *ngIf=\"caseData.stage\">Stage: {{caseData.stage}}</mat-label>\n      <mat-label *ngIf=\"caseData.description\">Description: {{caseData.description}}</mat-label>\n      <hr *ngIf=\"caseData.act\">\n      <mat-label *ngIf=\"caseData.act\">Act: {{caseData.act}}</mat-label>\n    </div>\n    <mat-divider></mat-divider>\n    <button style=\"margin-top:20px;\" mat-raised-button color=\"accent\"  *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" (click)=\"onEditCase()\">Update</button>\n\n  </mat-tab>\n  <mat-tab label=\"Details\">\n    <div>\n      <ckeditor class=\"document-editor\" [editor]=\"Editor\" [(ngModel)]=\"details\" (ready)=\"onReady($event)\"></ckeditor>\n      <mat-divider></mat-divider>\n      <button style=\"margin-top:20px;\" mat-raised-button color=\"accent\" *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" (click)=\"onDetailsUpdated()\">Update</button>\n      <!-- <button style=\"margin-top:20px;\" mat-raised-button color=\"accent\" *ngIf=\"caseData.status == 'admitted'\" (click)=\"onDetailsUpdated()\">Update</button> -->\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Hearings\">\n    <div style=\"display: flex; margin: 20px 20px;\" fxLayout=\"column\"  *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\">\n      <mat-label style=\"font-size: large;\"> Add Hearing Date</mat-label>\n      <form #addOrder=\"ngForm\" (ngSubmit)=\"onNewOrder(addOrder)\">\n      <mat-form-field style=\"width:40%; margin-top: 20px;\">\n        <input matInput ngModel required [matDatepicker]=\"picker\" placeholder=\"Hearing Date\" name=\"orderDate\" id=\"orderDate\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n      <span class=\"flex-spacer\"></span>\n      <mat-form-field style=\"width:40%;margin-top: 20px; margin-left:10%;\">\n        <input matInput [(ngModel)]=\"newOrderNote\" #message maxlength=\"256\" placeholder=\"Note\" name=\"note\" id=\"note\">\n        <mat-hint [align]=\"'end'\">{{message.value.length}} / 256</mat-hint>\n      </mat-form-field>\n    \n      <button style=\"width: 200px; margin-top: 10px;\" mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"addOrder.invalid\">Add New Hearing Date</button>\n     </form>\n    </div>\n    \n    <mat-card style=\"display: flex; width: 80%; margin: 40px auto;\" *ngIf=\"displayNextOrder\">\n      <mat-label class=\"mat-h3\" style=\"font-size: large;\">Next Hearing Date :</mat-label>\n      <h3 class=\"mat-h3\" style=\"margin-left: 20px;\">{{orders[0].orderDate | date}}</h3>\n      <h3 class=\"mat-h3\" style=\"margin-left: 20px;\">{{orders[0].orderNote }}</h3>\n    </mat-card>\n    <table mat-table [dataSource]=\"caseData.orders\" *ngIf=\"orders.length != 0\" class=\"mat-elevation-z8\" style=\"width: 80%; margin: 40px auto;\">\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- Position Column -->\n      <!-- <ng-container matColumnDef=\"Order Date\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element}} </td>\n      </ng-container> -->\n    \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"Order Date\">\n        <th mat-header-cell *matHeaderCellDef style=\"font-size: medium;\"> Hearing Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date}} </td>\n      </ng-container>\n    \n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"Note\">\n        <th mat-header-cell *matHeaderCellDef style=\"font-size: medium;\"> Note </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderNote}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"Action\">\n        <th mat-header-cell *matHeaderCellDef style=\"font-size: medium;\"> Action </th>\n        <td mat-cell *matCellDef=\"let element\"><button (click)=\"onDeleteOrder(element._id)\" mat-icon-button  *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n          <mat-icon>delete</mat-icon>\n        </button></td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-tab>\n  <mat-tab label=\"Notes\">\n    <div *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\">\n    <div style=\"display: flex; margin: 20px 20px;\" fxLayout=\"column\" >\n      <mat-label style=\"font-size: large;\" *ngIf=\"!editNoteMode\"> Add New Note</mat-label>\n      <mat-label style=\"font-size: large;\" *ngIf=\"editNoteMode\"> Edit Note</mat-label>\n      <form #addNote=\"ngForm\" (ngSubmit)=\"onAddNote(addNote)\" *ngIf=\"!editNoteMode\">\n        <mat-form-field style=\"margin-right: 15px;\">\n          <input matInput ngModel name=\"title\" id=\"title\" placeholder=\"title\" required>\n        </mat-form-field>\n        <mat-form-field style=\"width:80%; margin-top: 20px; margin-right:10px;\">\n          <input matInput #message1 ngModel maxlength=\"256\" placeholder=\"Note\" name=\"Note\" id=\"Note\" required>\n          <mat-hint [align]=\"'end'\">{{message1.value.length}} / 256</mat-hint>\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button style=\"margin: 10px auto;\" color=\"accent\" [disabled]=\"addNote.invalid\">Add Note</button>\n      </form>\n      <form #editNote=\"ngForm\" (ngSubmit)=\"onEditNote(editNote)\" *ngIf=\"editNoteMode\">\n        <mat-form-field style=\"margin-right: 15px;\">\n          <input matInput  [(ngModel)]=\"newTitle\" name=\"title\" id=\"title\" placeholder=\"title\" required>\n        </mat-form-field>\n        <mat-form-field style=\"width:80%; margin-top: 20px; margin-right:10px;\">\n          <input matInput [(ngModel)]=\"newNote\" #message1 maxlength=\"256\" placeholder=\"Note\" name=\"Note\" id=\"Note\" required>\n          <mat-hint [align]=\"'end'\">{{message1.value.length}} / 256</mat-hint>\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button style=\"margin: 10px auto;\" color=\"accent\" [disabled]=\"editNote.invalid\">Edit Note</button>\n      </form>\n    </div>\n      <div *ngIf=\"!editNoteMode\">\n        <mat-card class=\"example-card mat-elevation-z8\" *ngFor=\"let note of caseData.notes\" style=\"margin-bottom: 1rem;\">\n          <mat-card-header>\n            <mat-card-title>{{note.title}}</mat-card-title>\n            <mat-card-subtitle>{{note.createdAt | date}}</mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content style=\"padding-left: 15px;\">\n            <p>{{note.note}}</p>\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-stroked-button color=\"accent\" *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" (click)=\"onEditMode(note)\">Edit</button>\n            <button mat-stroked-button color=\"warn\" *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" (click)=\"onDeleteNote(note._id)\">Delete</button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Documents\">\n    <div style=\"display: flex; margin: 20px 20px;\" *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" fxLayout=\"column\">\n      <mat-label style=\"font-size: large;\">Upload Document</mat-label>\n      <br>\n      <form enctype=\"multipart/form-data\">\n        <input type=\"file\"\n             id=\"file\" multiple accept=\"application/pdf\"\n             (change)=\"handleFileInput($event.target.files)\">\n        <pre style=\"color: red;\">  *only pdf can be uploaded</pre>\n      </form>\n    </div>\n    <br><br><br>\n    <table mat-table [dataSource]=\"files\" style=\"width: 80%; margin: auto\">\n    \n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.originalname}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Size\">\n        <th mat-header-cell *matHeaderCellDef> Size(In Kb) </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.size/1000}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Created_At\">\n        <th mat-header-cell *matHeaderCellDef> Created At </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.createdAt | date}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let element\"><button mat-button color=\"accent\" (click)=\"downloadPdf(element.filename, element.contentType)\"> View </button> <button *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" mat-icon-button color=\"warn\" (click)=\"deletePdf(element.filename)\">  Delete  </button> </td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"DocColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: DocColumns;\"></tr>\n    \n    </table>\n  </mat-tab>\n\n  <mat-tab label=\"Client\">\n    <div *ngIf=\"caseData.client\">\n      <div style=\"display: flex; margin: 20px 20px;\" fxLayout=\"column\" >\n        <mat-label style=\"font-size: large;\">Linked Client</mat-label>\n        <mat-card style=\"margin-top: 20px;display: flex;\">{{linkedClient.firstname}} <span class=\"tab\"></span> {{linkedClient.lastname}} <span class=\"tab\"></span> {{linkedClient.email}} <span class=\"tab\"></span> {{linkedClient.phnno}} <span class=\"flex-spacer\"></span>\n          <button style=\"width: 10%;\" mat-raised-button color=\"primary\" (click)=\"onMessage()\">Message</button>\n          <pre>  </pre>\n          <button style=\"width: 10%;\" mat-raised-button color=\"accent\" (click)=\"unlink()\">Unlink</button></mat-card> \n      </div>\n    </div>\n    <div id=\"search-component\" *ngIf=\"!caseData.client\">\n      <h4><label for=\"search-box\">Client Search</label></h4>\n      <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n      <ul class=\"search-result\">\n        <table mat-table [dataSource]=\"(clients$ | async)\" *ngIf= \"clients$\" class=\"mat-elevation-z8\" style=\"width: 80%; margin: 40px auto;\">\n          <ng-container matColumnDef=\"firstName\">\n            <th mat-header-cell *matHeaderCellDef> firstName </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.firstname}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef> lastName </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lastname}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"Contact\">\n            <th mat-header-cell *matHeaderCellDef> Contact </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.phnno}} </td>\n          </ng-container>        \n          <ng-container matColumnDef=\"Email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"Action\">\n            <th mat-header-cell *matHeaderCellDef> Action </th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"onLinkClient(element, caseData._id)\" mat-icon-button color=\"warn\"> Link </button> </td>\n          </ng-container>       \n          <tr mat-header-row *matHeaderRowDef=\"display\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: display;\"></tr>\n        </table>\n      </ul>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n</mat-card-content>\n</mat-card>\n</div>","<div id=\"mario-chat\">\n    <h2>{{ clientData.firstname }}  {{clientData.lastname}}</h2>\n    <div id=\"chat-window\">\n        <div *ngFor=\"let item of messageArray\">\n            <p [class.userMessage]=\"item.username == this.username\" [class.secUserMessage]=\"item.username != this.username\">{{ item.message }}</p>                \n        </div>\n        <div class=\"secUserMessage\" *ngIf=\"isTyping\">\n            <div class=\"typing typing-1\"></div>\n            <div class=\"typing typing-2\"></div>\n            <div class=\"typing typing-3\"></div>\n        </div>\n    </div>\n    <div style=\"display: flex;\"> \n    <input (keypress)=\"typing()\" [(ngModel)]=\"message\" name=\"message\" type=\"text\" style=\"width: 80%;\" placeholder=\"Message\"/>\n    <span class=\"flex-spacer\"></span>            \n    <button id=\"send\" (click)=\"sendMessage()\" style=\"width: 20%\">Send</button>\n</div>    \n</div>","import { Router, ActivatedRoute } from '@angular/router';\nimport { WebsocketService } from '../services/websocket.service';\nimport { AuthService } from '../services/auth.service'\nimport { Component, OnInit } from '@angular/core';\nimport { CaseService } from '../services/case.service';\nimport { Client } from '../models/client.model';\n\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.scss']\n})\nexport class ChatroomComponent implements OnInit {\n\n  username: String;\n  email: String;\n  chatroom;\n  message: String;\n  messageArray: Array<{username: String, message: String}> = [];\n  isTyping = false;\n  clientData:Client;\n\n  constructor(private route: ActivatedRoute,\n    private webSocketService: WebsocketService,\n    private authService: AuthService,\n    private caseService: CaseService) {\n      this.webSocketService.newMessageReceived().subscribe(data => {\n        this.messageArray.push(data);\n        this.isTyping = false;\n      });\n      this.webSocketService.receivedTyping().subscribe(bool => {\n        this.isTyping = bool.isTyping;\n      });\n     }\n\n  ngOnInit(): void {\n    this.clientData = this.caseService.returnClient();\n    const currentUser = this.authService.getUserId();\n    this.username = this.authService.getuserName();\n    this.chatroom = currentUser + this.clientData.userId\n\n    this.webSocketService.joinRoom({lawyer: currentUser, room: this.chatroom, client: this.clientData.userId});\n    this.authService.getChatRoomsChat(this.chatroom).subscribe(messages => {\n      this.messageArray = messages;\n    }); \n  }\n\n  sendMessage() {\n    this.webSocketService.sendMessage({room: this.chatroom, user: this.username, message: this.message});\n    this.message = '';\n  }\n\n  typing() {\n    this.webSocketService.typing({room: this.chatroom, user: this.username});\n  }\n}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-client-main-nav',\n  templateUrl: './client-main-nav.component.html',\n  styleUrls: ['./client-main-nav.component.scss']\n})\nexport class ClientMainNavComponent {\n\n  link1:boolean = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService : AuthService) {}\n\n  selectList() {\n    this.link1=!this.link1;\n  }\n\n  logoutLawyer () {\n    this.authService.logoutLawyer()\n  }\n}\n","<!-- <mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar style=\"background-color:#9E9E9E;color: white;\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Lawyer Portal</span>\n      <span class=\"flex-spacer\"></span>\n      <button mat-icon-button >\n        <mat-icon>chat</mat-icon>\n      </button>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>settings</mat-icon>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>Item 1</button>\n            <button mat-menu-item>Item 2</button>\n          </mat-menu>\n      </button>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n\n<ng-container>\n    <mat-toolbar color='primary' class=\"example-header\">\n      <button\n          type=\"button\"\n          aria-label=\"Toggle sidenav\"\n          mat-icon-button\n          (click)=\"sidenav.toggle()\"\n        >\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        </button>\n        <span>Lawyer Portal ( Client )</span>\n        <span class=\"flex-spacer\"></span>\n        <button mat-icon-button >\n          <mat-icon>chat</mat-icon>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>settings</mat-icon>\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item>Item 1</button>\n              <button (click)=\"logoutLawyer()\" mat-menu-item>Logout</button>\n            </mat-menu>\n        </button>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-container\">\n      <mat-sidenav #sidenav [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" opened class=\"example-sidenav\"\n                   [fixedInViewport]=\"'fixed'\"\n                   [fixedTopGap]=\"60\" [fixedBottomGap]=\"60\"\n                   [opened]=\"(isHandset$ | async) === false\">\n                   <mat-nav-list>\n                    <a mat-list-item routerLink='/clientdashboard'>Dashboard</a><mat-divider></mat-divider>\n                    <a mat-list-item routerLink='/clientcases'>Cases</a><mat-divider></mat-divider>\n                  </mat-nav-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <ng-content></ng-content>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  \n    <mat-toolbar class=\"example-footer\">Footer</mat-toolbar>\n  </ng-container>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { Case } from '../models/case.model';\nimport { CaseService } from '../services/case.service';\nimport * as DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Client } from '../models/client.model';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Lawyer } from '../models/lawyer.model';\nimport { LawyerInt } from '../models/lawyer.model copy';\n\nexport interface Order {\n  id:string;\n  _id?:string;\n  orderDate: Date;\n  orderNote?: string ;\n}\nexport interface Note {\n  _id?: string;\n  title: string;\n  note: string;\n  createdAt: Date;\n}\n\n@Component({\n  selector: 'app-client-caseinfo',\n  templateUrl: './client-caseinfo.component.html',\n  styleUrls: ['./client-caseinfo.component.scss']\n})\nexport class ClientCaseinfoComponent implements OnInit,OnDestroy {\n\n  constructor(private caseService: CaseService, private router: Router, private sanitizer: DomSanitizer) { }\n\n  private caseSub : Subscription;\n  caseData:Case;\n  private id:string;\n  public details:string;\n  public linkedLawyer: LawyerInt;\n  public linkedLawyerSub: Subscription;\n\n  public Editor = DecoupledEditor;\n\n  public onReady( editor ) {\n      editor.ui.getEditableElement().parentElement.insertBefore(\n          editor.ui.view.toolbar.element,\n          editor.ui.getEditableElement()\n      );\n  }\n\n  orders: Order[];\n  newOrderNote: string;\n  displayNextOrder:boolean = false;\n  displayedColumns: string[] = ['Order Date', 'Note'];\n  \n\n  onDetailsUpdated() {\n    this.caseData.details = this.details;\n    this.caseService.updateDetails(this.caseData);\n  }\n\n  newTitle: string = '';\n  newNote:string = '';\n  notes: Note[];\n  editNote: Note;\n  editNoteMode: boolean = false;\n\n\n  fileToUpload: FileList = null;\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files;\n    if(this.fileToUpload.length != 0) {\n    this.caseService.onUploadDoc(this.fileToUpload, this.caseData._id).subscribe((data:any)=> {\n      this.files = data;\n      this.caseData.docs = data;\n      console.log(data);\n    })\n  } }\n\n  DocColumns: string[] = ['Name', 'Size', 'Created_At', 'Actions'];\n  files: any;\n\n  downloadPdf(filename, contentType) {\n    this.caseService.downloadPDF(filename, contentType).subscribe(\n      (res) => {\n        const file = new Blob([(res)], { type: \"application/pdf\" });\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL);\n      }\n    );\n  }\n\n  deletePdf(filename) {\n    this.files = this.files.filter( function(e) {\n      return e.filename != filename\n    })\n    this.caseData.docs = this.files;\n    this.caseService.onDeleteDoc(this.files, this.caseData._id);\n    this.caseService.deletePDF(filename);\n  }\n\n  onMessage() {\n    this.router.navigate([\"clientChatroom\"])\n  }\n\n  ngOnInit(): void {\n\n    this.linkedLawyerSub = this.caseService.getlinkedLawyerUpdateListener().subscribe((data:LawyerInt) => {\n      this.linkedLawyer = data;\n    });\n\n    this.caseSub = this.caseService.getsingleCaseUpdateListener().subscribe((data:Case) => {\n      this.caseData = data;\n      this.details = data.details;\n      this.orders = data.orders;\n      this.notes = data.notes;\n      this.files = data.docs;\n      this.caseData.orders.sort(function(a, b) {\n        var c:any = new Date(a.orderDate);\n        var d:any = new Date(b.orderDate);\n        return d-c;\n      });\n      if(new Date(this.caseData.orders[0].orderDate) > new Date()) {\n        this.displayNextOrder = true;\n      }\n    })\n\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.caseSub.unsubscribe();\n    this.linkedLawyerSub.unsubscribe();\n  }\n}","<div class=\"grid-container\">\n    <h1 class=\"mat-h1\">Case Info</h1>\n    <mat-card style=\"margin: 20px 50px;\">\n        <mat-card-content style=\"min-height: 510px;\n        max-height: auto;\">\n<mat-tab-group mat-align-tabs=\"start\">\n  <mat-tab label=\"Case Info\">\n    <div fxLayout=\"column\" style=\"display: flex;margin: 20px 20px;\">\n      <div fxLayout=\"row\">\n        <mat-label>Stamp No: {{caseData.stampNo}}</mat-label>\n        <mat-label style=\"margin-left: 30px;\">Filling Date: {{caseData.fillingDate | date}}</mat-label>\n      </div>\n      <hr *ngIf=\"(caseData.RegNo || caseData.RegDate)\">\n      <div fxLayout=\"row\">\n        <mat-label *ngIf=\"caseData.RegNo\">Reg No: {{caseData.RegNo}}</mat-label>\n        <mat-label *ngIf=\"caseData.RegDate\" style=\"margin-left: 30px;\">Reg Date: {{caseData.RegDate | date}}</mat-label>\n      </div>\n      <hr>\n      <mat-label>Retitioner: {{caseData.petitioner}}</mat-label>\n      <mat-label>Respondent: {{caseData.respondent}}</mat-label>\n      <mat-label>Bench: {{caseData.bench}}</mat-label>\n      <mat-label>Status: {{caseData.status}}</mat-label>\n      <mat-label>District: {{caseData.district}}</mat-label>\n      <mat-label *ngIf=\"caseData.stage\">Stage: {{caseData.stage}}</mat-label>\n      <mat-label *ngIf=\"caseData.description\">Description: {{caseData.description}}</mat-label>\n      <hr *ngIf=\"caseData.act\">\n      <mat-label *ngIf=\"caseData.act\">Act: {{caseData.act}}</mat-label>\n    </div>\n    <mat-divider></mat-divider>\n  \n  </mat-tab>\n  <mat-tab label=\"Details\">\n    <div>\n      <ckeditor class=\"document-editor\" [editor]=\"Editor\" [(ngModel)]=\"details\" (ready)=\"onReady($event)\"></ckeditor>\n      <mat-divider></mat-divider>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Hearings\">\n    \n    <mat-card style=\"display: flex; width: 80%; margin: 40px auto;\" *ngIf=\"displayNextOrder\">\n      <mat-label class=\"mat-h3\" style=\"font-size: large;\">Next Hearing Date :</mat-label>\n      <h3 class=\"mat-h3\" style=\"margin-left: 20px;\">{{orders[0].orderDate | date}}</h3>\n      <h3 class=\"mat-h3\" style=\"margin-left: 20px;\">{{orders[0].orderNote }}</h3>\n    </mat-card>\n    <table mat-table [dataSource]=\"caseData.orders\" *ngIf=\"orders.length != 0\" class=\"mat-elevation-z8\" style=\"width: 80%; margin: 40px auto;\">\n      <ng-container matColumnDef=\"Order Date\">\n        <th mat-header-cell *matHeaderCellDef style=\"font-size: medium;\"> Hearing Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Note\">\n        <th mat-header-cell *matHeaderCellDef style=\"font-size: medium;\"> Note </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderNote}} </td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-tab>\n\n  <mat-tab label=\"Documents\">\n    <div style=\"display: flex; margin: 20px 20px;\" *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" fxLayout=\"column\">\n      <mat-label style=\"font-size: large;\">Upload Document</mat-label>\n      <br>\n      <form enctype=\"multipart/form-data\">\n        <input type=\"file\"\n             id=\"file\" multiple accept=\"application/pdf\"\n             (change)=\"handleFileInput($event.target.files)\">\n        <pre style=\"color: red;\">  *only pdf can be uploaded</pre>\n      </form>\n    </div>\n    <br><br><br>\n    <table mat-table [dataSource]=\"files\" style=\"width: 80%; margin: auto\">\n    \n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.originalname}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Size\">\n        <th mat-header-cell *matHeaderCellDef> Size(In Kb) </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.size/1000}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Created_At\">\n        <th mat-header-cell *matHeaderCellDef> Created At </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.createdAt | date}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let element\"><button mat-button color=\"accent\" (click)=\"downloadPdf(element.filename, element.contentType)\"> View </button> <button *ngIf=\"caseData.status === 'admitted' || caseData.status==='pre-admitted'\" mat-icon-button color=\"warn\" (click)=\"deletePdf(element.filename)\">  Delete  </button> </td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"DocColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: DocColumns;\"></tr>\n    \n    </table>\n  </mat-tab>\n\n  <mat-tab label=\"Lawyer\">\n    <div *ngIf=\"caseData.lawyer\">\n      <div style=\"display: flex; margin: 20px 20px;\" fxLayout=\"column\" >\n        <mat-label style=\"font-size: large;\">Linked Lawyer</mat-label>\n        <mat-card style=\"margin-top: 20px;display: flex;\">{{linkedLawyer.firstname}} <span class=\"tab\"></span> {{linkedLawyer.lastname}} <span class=\"tab\"></span> {{linkedLawyer.email}} <span class=\"tab\"></span> {{linkedLawyer.phnno}} <span class=\"flex-spacer\"></span>\n          <button style=\"width: 10%;\" mat-raised-button color=\"primary\" (click)=\"onMessage()\">Message</button>\n        </mat-card> \n      </div>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n</mat-card-content>\n</mat-card>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}